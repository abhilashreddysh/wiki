{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"The Knowledge Hub","text":"<p>This is my personal Knowledge Hub \u2014 a place where I jot down everything about my homelab, infrastructure experiments, and projects.</p> <ul> <li>Quick notes, configs, and scripts I use.</li> <li>Problems I run into (so I don\u2019t have to solve them twice).</li> <li>Random experiments, trials, and lessons learned along the way.</li> </ul> <p>Mostly refers to my setup and understanding, but if it helps someone else, great! Explore and see what I\u2019ve been building and learning.</p>"},{"location":"#quick-links","title":"Quick Links","text":"<ul> <li> <p> Infrastructure</p> <ul> <li>Inventory</li> <li>Self-Hosted Apps</li> <li>Monitoring Stack</li> </ul> </li> <li> <p> Guides</p> <ul> <li>Tutorials</li> <li>Troubleshooting</li> <li>SOP</li> </ul> </li> </ul>"},{"location":"#my-projects","title":"My Projects","text":""},{"location":"#automation-scripts","title":"Automation Scripts","text":"<p>A collection of scripts to help in daily tasks.</p> <p> View Documentation</p> <p> Visit Repo</p>"},{"location":"#homelab-ansible","title":"Homelab Ansible","text":"<p>Ansible Playbooks for my homelab. Maintain all config in ansible as IaC</p> <p> View Documentation</p> <p> Visit Repo</p>"},{"location":"#github-activity","title":"Github Activity","text":""},{"location":"KB/","title":"Knowledge Base","text":"<p>This is my personal Knowledge Base (KB)</p>"},{"location":"KB/#what-youll-find-here","title":"What you\u2019ll find here","text":"<ul> <li>Guides &amp; How-Tos \u2013 Quick instructions for tasks and setups.</li> <li>Troubleshooting Logs \u2013 Problems, errors, and how I fixed them.</li> <li>Tips &amp; Insights \u2013 Notes, best practices, and lessons learned.</li> </ul>"},{"location":"KB/notes/SSL/","title":"What is SSL","text":"<p>SSL\u00a0stands for Secure Sockets Layer, and it refers to a protocol for encrypting, securing, and authenticating communications that take place on the Internet. Although SSL was replaced by an updated protocol called\u00a0TLS (Transport Layer Security)\u00a0some time ago, \"SSL\" is still a commonly used term for this technology.</p> <p>The main use case for SSL/TLS is securing communications between a client and a server, but it can also secure email, VoIP, and other communications over unsecured networks.</p>","tags":["ssl","network"]},{"location":"KB/notes/SSL/#how-does-ssltls-work","title":"How does SSL/TLS work?","text":"<p>These are the essential principles to grasp for understanding how SSL/TLS works:</p> <ul> <li>Secure communication begins with a\u00a0TLS handshake, in which the two communicating parties open a secure connection and exchange the public key</li> <li>During the TLS handshake, the two parties generate session keys, and the session keys encrypt and decrypt all communications after the TLS handshake</li> <li>Different session keys are used to encrypt communications in each new session</li> <li>TLS ensures that the party on the server side, or the website the user is interacting with, is actually who they claim to be</li> <li>TLS also ensures that data has not been altered, since a message authentication code (MAC) is included with transmissions</li> </ul> <p>With TLS, both\u00a0HTTP\u00a0data that users send to a website (by clicking, filling out forms, etc.) and the HTTP data that websites send to users is encrypted. Encrypted data has to be decrypted by the recipient using a key.</p>","tags":["ssl","network"]},{"location":"KB/notes/SSL/#the-tls-handshake","title":"The TLS handshake","text":"<p>TLS communication sessions begin with a TLS handshake. A TLS handshake uses something called asymmetric encryption, meaning that two different keys are used on the two ends of the conversation. This is possible because of a technique called public key cryptography.</p> <p>In\u00a0public key cryptography, two keys are used: a public key, which the server makes available publicly, and a private key, which is kept secret and only used on the server side. Data encrypted with the public key can only be decrypted with the private key.</p> <p>During the TLS handshake, the client and server use the public and private keys to exchange randomly generated data, and this random data is used to create new keys for encryption, called the session keys.</p>","tags":["ssl","network"]},{"location":"KB/notes/SSL/#symmetric-encryption-with-session-keys","title":"Symmetric encryption with session keys","text":"<p>Unlike asymmetric encryption, in symmetric encryption the two parties in a conversation use the same key. After the TLS handshake, both sides use the same session keys for encryption. Once session keys are in use, the public and private keys are not used anymore. Session keys are temporary keys that are not used again once the session is terminated. A new, random set of session keys will be created for the next session.</p> <p></p>","tags":["ssl","network"]},{"location":"KB/notes/SSL/#authenticating-the-origin-server","title":"Authenticating the origin server","text":"<p>TLS communications from the server include a message authentication code, or MAC, which is a digital signature confirming that the communication originated from the actual website. This authenticates the server, preventing\u00a0on-path attacks\u00a0and domain spoofing. It also ensures that the data has not been altered in transit.</p>","tags":["ssl","network"]},{"location":"KB/notes/SSL/#what-does-tls-do","title":"What does TLS do?","text":"<p>There are three main components to what the TLS protocol accomplishes:\u00a0Encryption, Authentication, and Integrity.</p> <ul> <li>Encryption:\u00a0hides the data being transferred from third parties.</li> <li>Authentication:\u00a0ensures that the parties exchanging information are who they claim to be.</li> <li>Integrity:\u00a0verifies that the data has not been forged or tampered with.</li> </ul>","tags":["ssl","network"]},{"location":"KB/notes/SSL/#what-is-an-ssl-certificate","title":"What is an SSL certificate?","text":"<p>An SSL certificate is a file installed on a website's\u00a0origin server. It's simply a data file containing the public key and the identity of the website owner, along with other information. Without an SSL certificate, a website's traffic can't be encrypted with TLS.</p> <p>Technically, any website owner can create their own SSL certificate, and such certificates are called self-signed certificates. However, browsers do not consider self-signed certificates to be as trustworthy as SSL certificates issued by a certificate authority.</p>","tags":["ssl","network"]},{"location":"KB/notes/SSL/#what-are-the-types-of-ssl-certificates","title":"What are the types of SSL certificates?","text":"<p>There are several different\u00a0types of SSL certificates. One certificate can apply to a single website or several websites, depending on the type:</p> <ul> <li>Single-domain:\u00a0A single-domain SSL certificate applies to only one domain (a \"domain\" is the name of a website, like www.cloudflare.com).</li> <li>Wildcard:\u00a0Like a single-domain certificate, a wildcard SSL certificate applies to only one domain. However, it also includes that domain's subdomains. For example, a wildcard certificate could cover www.cloudflare.com, blog.cloudflare.com, and developers.cloudflare.com, while a single-domain certificate could only cover the first.</li> <li>Multi-domain:\u00a0As the name indicates, multi-domain SSL certificates can apply to multiple unrelated domains.</li> </ul> <p>SSL certificates also come with different validation levels. A validation level is like a background check, and the level changes depending on the thoroughness of the check.</p> <ul> <li>Domain Validation:\u00a0This is the least-stringent level of validation, and the cheapest. All a business has to do is prove they control the domain.</li> <li>Organization Validation:\u00a0This is a more hands-on process: The CA directly contacts the person or business requesting the certificate. These certificates are more trustworthy for users.</li> <li>Extended Validation:\u00a0This requires a full background check of an organization before the SSL certificate can be issued.</li> </ul>","tags":["ssl","network"]},{"location":"KB/notes/SSL/#how-does-a-website-get-an-ssl-certificate","title":"How does a website get an SSL certificate?","text":"<p>Website owners need to obtain an SSL certificate from a certificate authority, and then install it on their web server (often a web host can handle this process). A certificate authority is an outside party who can confirm that the website owner is who they say they are. They keep a copy of the certificates they issue.</p>","tags":["ssl","network"]},{"location":"KB/notes/SSL/#is-it-possible-to-get-a-free-ssl-certificate","title":"Is it possible to get a free SSL certificate?","text":"<p>Many certificate authorities charge for SSL certificates. To help make the Internet more secure, Cloudflare offers\u00a0free SSL certificates. Cloudflare was the first Internet security and performance company to do so. Cloudflare also has worked to optimize SSL/TLS performance so that websites moving from HTTP to HTTPS do not have their\u00a0performance\u00a0impacted. For more information about SSL options with Cloudflare, see our\u00a0Developer documentation.</p>","tags":["ssl","network"]},{"location":"KB/notes/SSL/#what-is-the-difference-between-http-and-https","title":"What is the difference between HTTP and HTTPS?","text":"<p>The S in \"HTTPS\" stands for \"secure.\" HTTPS is just HTTP with SSL/TLS. A website with an HTTPS address has a legitimate SSL certificate issued by a certificate authority, and traffic to and from that website is authenticated and encrypted with the SSL/TLS protocol.</p> <p>To encourage the Internet as a whole to move to the more secure HTTPS, many web browsers have started to mark HTTP websites as \"not secure\" or \"unsafe.\" Thus, not only is HTTPS essential for keeping users safe and user data secure, it has also become essential for building trust with users.</p>","tags":["ssl","network"]},{"location":"KB/notes/SSL/#are-ssl-and-tls-the-same-thing","title":"Are SSL and TLS the same thing?","text":"<p>SSL is the direct predecessor of another protocol called TLS (Transport Layer Security). In 1999 the Internet Engineering Task Force (IETF) proposed an update to SSL. Since this update was being developed by the IETF and Netscape was no longer involved, the name was changed to TLS. The differences between the final version of SSL (3.0) and the first version of TLS are not drastic; the name change was applied to signify the change in ownership.</p> <p>Since they are so closely related, the two terms are often used interchangeably and confused. Some people still use SSL to refer to TLS, others use the term \"SSL/TLS encryption\" because SSL still has so much name recognition.</p>","tags":["ssl","network"]},{"location":"KB/notes/SSL/#reference","title":"Reference","text":"<ul> <li>Cloudflare - How does SSL work?</li> <li>Cloudflare - What is SSL?</li> </ul>","tags":["ssl","network"]},{"location":"KB/notes/docker/","title":"Docker Concepts","text":""},{"location":"KB/notes/docker/#what-is-docker","title":"What is Docker?","text":"<ul> <li>Platform for building, shipping, and running applications inside containers.</li> <li>A container = lightweight runtime environment (like a mini VM but shares the host kernel).</li> </ul>"},{"location":"KB/notes/docker/#core-components","title":"Core Components","text":"<ul> <li>Image: Blueprint for containers (read-only).</li> <li>Container: Running instance of an image.</li> <li>Dockerfile: Instructions to build an image.</li> <li>Registry: Repository to store and share images (Docker Hub, GHCR, private registry).</li> <li>Volumes: Persistent storage for containers.</li> <li>Networks: Allow containers to communicate.</li> </ul>"},{"location":"KB/notes/docker/#mental-model","title":"Mental Model","text":"<p>Dockerfile \u2192 Build Image \u2192 Run Container \u2192 Attach Volume/Network \u2192 Manage Lifecycle.</p>"},{"location":"KB/notes/docker/how-to/","title":"Docker How-To","text":""},{"location":"KB/notes/docker/how-to/#install-verify","title":"Install &amp; Verify","text":"<ul> <li>Install from docker.com.</li> <li>Check version: <code>docker --version</code>.</li> </ul>"},{"location":"KB/notes/docker/how-to/#working-with-images","title":"Working with Images","text":"<ul> <li>Pull image: <code>docker pull nginx:1.25</code></li> <li>List images: <code>docker images</code></li> <li>Build image: <code>docker build -t myapp:1.0 .</code></li> <li>Tag image: <code>docker tag myapp:1.0 myrepo/myapp:1.0</code></li> <li>Push image: <code>docker push myrepo/myapp:1.0</code></li> </ul>"},{"location":"KB/notes/docker/how-to/#working-with-containers","title":"Working with Containers","text":"<ul> <li>Run container: <code>docker run -d --name web -p 8080:80 nginx</code></li> <li>List running containers: <code>docker ps</code></li> <li>Start/stop container: <code>docker start web</code> / <code>docker stop web</code></li> <li>Exec into container: <code>docker exec -it web /bin/sh</code></li> <li>View logs: <code>docker logs -f web</code></li> </ul>"},{"location":"KB/notes/docker/how-to/#volumes-networks","title":"Volumes &amp; Networks","text":"<ul> <li>Create volume: <code>docker volume create data</code></li> <li>Run with volume: <code>docker run -v data:/app/data ...</code></li> <li>Create network: <code>docker network create mynet</code></li> <li>Run with network: <code>docker run --network=mynet ...</code></li> </ul>"},{"location":"KB/notes/docker/how-to/#dockerfile-basics","title":"Dockerfile Basics","text":"<pre><code>FROM ubuntu:20.04\nRUN apt-get update &amp;&amp; apt-get install -y curl\nCOPY app/ /app\nWORKDIR /app\nCMD [\"./start.sh\"]\n</code></pre>"},{"location":"KB/notes/docker/issues/","title":"Docker Issues &amp; Fixes","text":""},{"location":"KB/notes/docker/issues/#container-exits-immediately","title":"Container exits immediately","text":"<ul> <li>Symptom: Run container, it stops right away.</li> <li>Cause: Main process ended (e.g., CMD script finishes).</li> <li>Fix: Use <code>docker run -it</code> for interactive, or ensure long-running process is in CMD.</li> </ul>"},{"location":"KB/notes/docker/issues/#port-binding-not-working","title":"Port binding not working","text":"<ul> <li>Symptom: Container is running, but service not reachable.</li> <li> <p>Causes:</p> <ul> <li>Forgot <code>-p host:container</code> mapping.</li> <li>Firewall blocking port.</li> </ul> </li> <li> <p>Fix: Run with <code>docker run -p 8080:80 ...</code> and check firewall.</p> </li> </ul>"},{"location":"KB/notes/docker/issues/#image-too-large","title":"Image too large","text":"<ul> <li>Symptom: Built image is hundreds of MB.</li> <li> <p>Causes:</p> <ul> <li>Using heavy base image (e.g., <code>ubuntu</code>).</li> <li>Not cleaning up apt cache.</li> </ul> </li> <li> <p>Fix: Use slim images (<code>alpine</code>, <code>debian-slim</code>).   Example:   <pre><code>RUN apt-get update &amp;&amp; apt-get install -y curl &amp;&amp; rm -rf /var/lib/apt/lists/*\n</code></pre></p> </li> </ul>"},{"location":"KB/notes/docker/issues/#cannot-connect-to-docker-daemon","title":"Cannot connect to Docker daemon","text":"<ul> <li>Symptom: docker ps gives permission error.</li> <li> <p>Causes:</p> <ul> <li>Docker daemon not running.</li> <li>User not in docker group.</li> </ul> </li> <li> <p>Fix:   <pre><code>sudo systemctl start docker\nsudo usermod -aG docker $USER\n</code></pre></p> </li> </ul>"},{"location":"KB/notes/docker/issues/#volume-data-missing-after-restart","title":"Volume data missing after restart","text":"<ul> <li>Symptom: Data lost after container removed.</li> <li>Cause: Used bind mount incorrectly or forgot named volume.</li> <li>Fix: Use -v mydata:/path/in/container.</li> </ul>"},{"location":"KB/notes/helm/","title":"Helm Concepts","text":""},{"location":"KB/notes/helm/#what-is-helm","title":"What is Helm?","text":"<ul> <li>Package manager for Kubernetes.</li> <li>Packages are called Charts.</li> <li>Each deployed chart is a Release.</li> </ul>"},{"location":"KB/notes/helm/#why-helm","title":"Why Helm?","text":"<ul> <li>Simplifies deployments (instead of raw YAML).</li> <li>Enables versioning, rollbacks, reusable configs.</li> </ul>"},{"location":"KB/notes/helm/#core-terms","title":"Core Terms","text":"<ul> <li>Chart: Directory with templates + metadata.</li> <li>values.yaml: Default configuration.</li> <li>Release: Running instance of a chart.</li> <li>Repository: Storage for charts (public or private).</li> </ul>"},{"location":"KB/notes/helm/#mental-model","title":"Mental Model","text":"<p>Chart (template) + Values (config) \u2192 Rendered YAML \u2192 Applied as Release.</p>"},{"location":"KB/notes/helm/how-to/","title":"Helm How-To","text":""},{"location":"KB/notes/helm/how-to/#install-helm","title":"Install Helm","text":"<ul> <li>Download from helm.sh.</li> <li>Verify: <code>helm version</code>.</li> </ul>"},{"location":"KB/notes/helm/how-to/#manage-repos","title":"Manage Repos","text":"<ul> <li>Add repo: <code>helm repo add bitnami https://charts.bitnami.com/bitnami</code></li> <li>Update repos: <code>helm repo update</code></li> <li>Search: <code>helm search repo nginx</code></li> </ul>"},{"location":"KB/notes/helm/how-to/#install-upgrade-remove","title":"Install / Upgrade / Remove","text":"<ul> <li>Install: <code>helm install myapp bitnami/nginx</code></li> <li>Upgrade: <code>helm upgrade myapp ./mychart -f values.yaml</code></li> <li>Uninstall: <code>helm uninstall myapp</code></li> </ul>"},{"location":"KB/notes/helm/how-to/#inspect-releases","title":"Inspect Releases","text":"<ul> <li>List releases: <code>helm list</code></li> <li>Show values: <code>helm get values myapp</code></li> <li>Show resources: <code>helm status myapp --show-resources</code></li> </ul>"},{"location":"KB/notes/helm/how-to/#develop-charts","title":"Develop Charts","text":"<ul> <li>Create chart: <code>helm create mychart</code></li> <li>Lint chart: <code>helm lint ./mychart</code></li> <li>Render without deploying: <code>helm template ./mychart</code></li> </ul>"},{"location":"KB/notes/helm/issues/","title":"Helm Issues &amp; Fixes","text":""},{"location":"KB/notes/helm/issues/#values-not-applying","title":"Values not applying","text":"<ul> <li>Symptom: App still runs with defaults.</li> <li>Cause: Forgot <code>-f values.yaml</code>.</li> <li>Fix: Use <code>helm get values myapp</code> to confirm applied values.</li> </ul>"},{"location":"KB/notes/helm/issues/#upgrade-failed","title":"Upgrade failed","text":"<ul> <li>Symptom: Helm upgrade errors out.</li> <li>Fix: Use <code>helm upgrade --install myapp ./mychart</code>.</li> </ul>"},{"location":"KB/notes/helm/issues/#stale-resources-after-uninstall","title":"Stale resources after uninstall","text":"<ul> <li>Symptom: PVCs or CRDs remain after uninstall.</li> <li>Cause: Helm doesn\u2019t remove PVCs/CRDs by default.</li> <li>Fix: Manually delete leftover PVC/CRD.</li> </ul>"},{"location":"KB/notes/helm/issues/#debugging-install","title":"Debugging install","text":"<ul> <li>Use dry-run: <code>helm install myapp ./mychart --dry-run --debug</code>.</li> <li>Template rendering: <code>helm template ./mychart</code>.</li> </ul>"},{"location":"KB/notes/kubectl/","title":"kubectl Concepts","text":""},{"location":"KB/notes/kubectl/#what-is-kubectl","title":"What is kubectl?","text":"<ul> <li>Command line tool to interact with the Kubernetes API server.</li> <li>Think of it as the \"remote control\" for your cluster.</li> </ul>"},{"location":"KB/notes/kubectl/#core-objects","title":"Core Objects","text":"<ul> <li>Pod: Smallest deployable unit (runs containers).</li> <li>Deployment: Ensures pods are running and handles updates.</li> <li>Service: Exposes pods within cluster or externally.</li> <li>ConfigMap / Secret: Store configuration and sensitive data.</li> <li>Namespace: Logical separation of resources.</li> <li>Node: A worker machine.</li> </ul>"},{"location":"KB/notes/kubectl/#declarative-vs-imperative","title":"Declarative vs Imperative","text":"<ul> <li>Imperative: run direct commands (quick changes).</li> <li>Declarative: apply YAML files (repeatable &amp; versioned).</li> </ul>"},{"location":"KB/notes/kubectl/#mental-model","title":"Mental Model","text":"<p>Cluster \u2192 Node \u2192 Pod \u2192 Container Namespace groups \u2192 Resources \u2192 Controlled via kubectl.</p>"},{"location":"KB/notes/kubectl/how-to/","title":"kubectl How-To","text":""},{"location":"KB/notes/kubectl/how-to/#connect-to-a-cluster","title":"Connect to a Cluster","text":"<ul> <li>Ensure kubeconfig is set up.</li> <li>Switch context: <code>kubectl config use-context &lt;name&gt;</code>.</li> </ul>"},{"location":"KB/notes/kubectl/how-to/#inspect-resources","title":"Inspect Resources","text":"<ul> <li><code>kubectl get pods -A</code></li> <li><code>kubectl describe pod &lt;pod&gt;</code></li> <li><code>kubectl logs &lt;pod&gt;</code></li> </ul>"},{"location":"KB/notes/kubectl/how-to/#deploy-applications","title":"Deploy Applications","text":"<ul> <li>Imperative: <code>kubectl run nginx --image=nginx</code></li> <li>Declarative: <code>kubectl apply -f deployment.yaml</code></li> </ul>"},{"location":"KB/notes/kubectl/how-to/#manage-configuration","title":"Manage Configuration","text":"<ul> <li>ConfigMaps: <code>kubectl create configmap ...</code></li> <li>Secrets: <code>kubectl create secret ...</code></li> </ul>"},{"location":"KB/notes/kubectl/how-to/#debug-workloads","title":"Debug Workloads","text":"<ul> <li>View events: <code>kubectl get events</code></li> <li>Resource usage: <code>kubectl top pods</code></li> <li>Restart deployment: <code>kubectl rollout restart deployment &lt;name&gt;</code></li> </ul>"},{"location":"KB/notes/kubectl/issues/","title":"kubectl Issues &amp; Fixes","text":""},{"location":"KB/notes/kubectl/issues/#pods-in-crashloopbackoff","title":"Pods in <code>CrashLoopBackOff</code>","text":"<ul> <li>Symptom: Pod starts, crashes, restarts.</li> <li>Cause: App inside container is failing.</li> <li>Fix: <code>kubectl logs &lt;pod&gt;</code> \u2192 check error \u2192 fix image/command.</li> </ul>"},{"location":"KB/notes/kubectl/issues/#pods-in-imagepullbackoff","title":"Pods in <code>ImagePullBackOff</code>","text":"<ul> <li>Symptom: Pod cannot pull image.</li> <li> <p>Causes:</p> <ul> <li>Wrong image name.</li> <li>Missing registry secret.</li> </ul> </li> <li> <p>Fix: Check <code>kubectl describe pod &lt;pod&gt;</code> \u2192 correct image or add secret.</p> </li> </ul>"},{"location":"KB/notes/kubectl/issues/#pods-stuck-in-pending","title":"Pods stuck in <code>Pending</code>","text":"<ul> <li>Symptom: Pod never schedules.</li> <li> <p>Causes:</p> <ul> <li>Not enough CPU/memory.</li> <li>NodeSelector mismatch.</li> </ul> </li> <li> <p>Fix: <code>kubectl describe pod &lt;pod&gt;</code> \u2192 reschedule or adjust spec.</p> </li> </ul>"},{"location":"KB/notes/kubectl/issues/#configmapsecret-not-updating","title":"ConfigMap/Secret not updating","text":"<ul> <li>Cause: Pods don\u2019t reload automatically.</li> <li>Fix: <code>kubectl rollout restart deployment &lt;name&gt;</code>.</li> </ul>"},{"location":"KB/notes/linux/crontab/","title":"How Cron Jobs Work","text":"<pre><code>a b c d e /directory/command output\n</code></pre> <p>So, the parts of a cron command are:</p> <ol> <li>The first five fields <code>a b c d e</code> specify the <code>time/date and recurrence</code> of the job.</li> <li>In the second section, the <code>/directory/command</code> specifies the <code>location and script</code> you want to run.</li> <li>The final segment <code>output</code> is optional. It defines how the <code>system notifies the user</code> of the job completion.</li> </ol> Field\u00a0 \u00a0 \u00a0Possible Values\u00a0\u00a0 \u00a0Syntax\u00a0\u00a0 \u00a0Description [a] -- Minute 0 -- 59\u00a0 7 * * * The cron job is initiated every time the system clock shows 7 in the minute's position. [b] -- Hour 0 -- 23 0 7 * * * The cron job runs any time the system clock shows 7am (7pm would be coded as 19). [c] -- Day 0 -- 31 0 0 7 * * The day of the month is 7 which means that the job runs every 7th day of the month. [d] -- Month 0 = none and 12 = December 0 0 0 7 * The numerical month is 7 which determines that the job runs only in July. [e] -- Day of the Week 0 = Sunday and 7 = Sunday 0 0 * * 7 7 in the current position means that the job would only run on Sundays. <p>Tip</p> <p>By default, cron sends an email to the owner of the crontab file when it runs. To turn off email output, add the following string, <code>&gt;/dev/null 2&gt;&amp;1</code>, after the timing and command fields.</p> <p>For efficiency, cron syntax also uses operators. Operators are special characters that perform operations on the provided values in the cron field.</p> <ul> <li>An asterisk (<code>*</code>) stands for all values. Use this operator to keep tasks running during all months, or all days of the week.</li> <li>A comma (<code>,</code>) specifies separate individual values.</li> <li>A dash (<code>-</code>) indicates a range of values.</li> <li>A forward-slash (<code>/</code>) is used to divide a value into steps. (*/2 would be every other value, */3 would be every third, */10 would be every tenth, etc.)</li> </ul> Example Cron Job\u00a0\u00a0 \u00a0Command Run Cron Job Every Minute\u00a0 * * * * * /root/backup.sh Run Cron Job Every 30 Minutes 30 * * * * /root/backup.sh Run Cron Job Every Hour\u00a0\u00a0 0 * * * * /root/backup.sh Run Cron Job Every Day at Midnight 0 0 * * * /root/backup.sh Run Cron Job at 2 am Every Day\u00a0\u00a0 0 2 * * * /root/backup.sh Run Cron Job Every 1st of the Month 0 0 1 * * /root/backup.sh Run Cron Job Every 15th of the Month 0 0 15 * * /root/backup.sh Run Cron Job on December 1st -- Midnight 0 0 0 12 * /root/backup.sh Run Cron Job on Saturday at Midnight\u00a0\u00a0 0 0 * * 6 /root/backup.sh","tags":["linux","crontab"]},{"location":"KB/notes/linux/filepermissions/","title":"Linux File Permissions","text":"<p>There are some things that we take for granted when using a computer. We might imagine, for instance, that we have access to every file and folder on our computer and that we are free to edit or remove them as we see fit. However, this is not always the case, particularly when working with operating systems built on the Linux platform. File permissions are very important in Linux because they control who can access, change, or remove a file or folder.</p>","tags":["linux","file permissions"]},{"location":"KB/notes/linux/filepermissions/#what-are-linux-file-permissions","title":"What are Linux file permissions?","text":"<p>In Linux, every file and folder has a set of permissions that determine who can access, modify, or delete it. These permissions are set using a combination of three letters, which are r (read), w (write), and x (execute). The first set of letters represents the permissions for the owner of the file, the second set represents the permissions for the group, and the third set represents the permissions for everyone else.</p> <p>Each set of permissions consists of three letters, which are either <code>r</code>, <code>w</code>, or <code>x</code>. If a letter is present, it means that the corresponding permission is granted. If it is absent, it means that the permission is not granted. Here is a table that shows the different permissions:</p> Letter Number Permission Meaning r 4 Read Allows the user to read the file or folder w 2 Write Allows the user to modify the file or folder x 1 Execute Allows the user to execute the file or access the folder - 0 - no Permission","tags":["linux","file permissions"]},{"location":"KB/notes/linux/filepermissions/#understanding-file-ownership-in-linux","title":"Understanding file ownership in Linux","text":"<p>Before we can understand how file permissions work, we need to understand how file ownership works in Linux. Every file and folder in Linux is owned by a particular user and group. The user is the person who created the file or folder, while the group is a collection of users who have been given permission to access the file or folder.</p>","tags":["linux","file permissions"]},{"location":"KB/notes/linux/filepermissions/#chown-command","title":"chown Command","text":"<p>When a file or folder is created, it is automatically assigned an owner and group. <code>By default, the owner of a file or folder is the user who created it, and the group is the primary group of that user</code>. However, you can change the owner and group of a file or folder using the chown command.</p> <pre><code>sudo chown NEW_OWNER FILE\n</code></pre> <p>Here, <code>NEW_OWNER</code> can be the name of a user or a group, and <code>FILE</code> is the name of the file whose ownership you want to modify.</p> <p>For example, to change the owner of a file named <code>myfile.txt</code> to a user named <code>user</code>, you can run the following command:</p> <pre><code>sudo chown user myfile.txt\n</code></pre> <p>Note that you need to have administrative privileges (i.e., be a sudoer) to change the ownership of a file. Also, if you want to change the ownership of a directory and its contents, you can use the <code>-R</code> option to make the command recursive:</p> <pre><code>sudo chown -R user mydir\n</code></pre> <p>This will change the ownership of all files and subdirectories in <code>mydir</code> to user <code>user</code>.</p>","tags":["linux","file permissions"]},{"location":"KB/notes/linux/filepermissions/#chgrp-command","title":"chgrp command","text":"<p>The <code>chgrp</code> command is a Linux/Unix command that is used to change the group ownership of a file or directory. The name <code>chgrp</code> stands for \"change group.\"</p> <p>The basic syntax of the <code>chgrp</code> command is:</p> <pre><code>chgrp [OPTIONS] GROUP FILE\n</code></pre> <p>Here, <code>GROUP</code> is the name of the group to which you want to change the ownership, and <code>FILE</code> is the name of the file or directory whose ownership you want to change.</p> <p>For example, to change the group ownership of a file named <code>myfile.txt</code> to a group named <code>staff</code>, you can run the following command:</p> <pre><code>sudo chgrp staff myfile.txt\n</code></pre>","tags":["linux","file permissions"]},{"location":"KB/notes/linux/filepermissions/#understanding-file-permissions-in-linux","title":"Understanding file permissions in Linux","text":"<p>Now that we understand how file ownership works in Linux, we can look at how file permissions work. As we mentioned earlier, every file and folder in Linux has a set of permissions that determine who can access, modify, or delete it. These permissions are set using a combination of three letters, which are r (read), w (write), and x (execute).</p> <p>The nine permission characters are grouped into three sets of three characters each. The first set represents the permissions for the owner of the file, the second set represents the permissions for the group, and the third set represents the permissions for others.</p> <p>Each set of three characters consists of the following:</p> <ul> <li>The first character represents <code>read</code> permission.</li> <li>The second character represents <code>write</code> permission.</li> <li>The third character represents <code>execute</code> permission.</li> </ul> <p>Tip</p> <p>To view the permissions of a file or folder in Linux, you can use the <code>ls -l</code> command. For instance, to view the permissions of a file called file.txt, you can use the following command:</p> <pre><code>ls -l file.txt\n-rw-r--r-- 1 user1 group1 0 May 14 22:30 file.txt\n</code></pre> <p>In this output, the first column represents the permissions of the file, the second column represents the number of hard links to the file, the third and fourth columns represent the owner and group of the file, the fifth column represents the size of the file.</p>","tags":["linux","file permissions"]},{"location":"KB/notes/linux/filepermissions/#file-types","title":"File Types","text":"<p>The file type is represented by the first character of the permission string.</p> <p>Different File Types</p> First Character Type of the File - Regular File d Directory l Symbolic Link c Character Device File b Block Device File p Named Pipe s Socket <p>Example, a file permission string starting with \"<code>d</code>\" would indicate a directory, and the permission number would be calculated in the same way as for a regular file.</p>","tags":["linux","file permissions"]},{"location":"KB/notes/linux/filepermissions/#the-number-representation","title":"The Number Representation","text":"<p>The possible values for each of these characters are:</p> <ul> <li>\"r\" for read permission (<code>4</code>)</li> <li>\"w\" for write permission (<code>2</code>)</li> <li>\"x\" for execute permission (<code>1</code>)</li> <li>\"-\" if the permission is not granted (<code>0</code>)</li> </ul> <p>Therefore, the number representation for file permissions in Linux can be obtained by assigning a value of 4 to \"r\", a value of 2 to \"w\", and a value of 1 to \"x\". Then, the permission string can be converted into a number by adding up the values for each set of three characters.</p> <p>For example, if the permission string is <code>rwxr-xr--</code>, the permission number would be calculated as follows:</p> <ul> <li>The first set <code>rwx</code> adds up to <code>4+2+1 = 7</code> (read, write, and execute permissions for the owner).</li> <li>The second set <code>r-x</code> adds up to <code>4+0+1 = 5</code> (read and execute permissions for the group).</li> <li>The third set <code>r--</code> adds up to <code>4+0+0 = 4</code> (read permission for others).</li> </ul> <p>Therefore, the number representation for this file permission would be <code>754</code>.</p> <p>Number Permissions</p> <p>You can use the following numbers to represent permissions:</p> <ul> <li><code>0</code> - no permissions</li> <li><code>1</code> - execute only</li> <li><code>2</code> - write only</li> <li><code>3</code> - write and execute</li> <li><code>4</code> - read only</li> <li><code>5</code> - read and execute</li> <li><code>6</code> - read and write</li> <li><code>7</code> - read, write, and execute</li> </ul>","tags":["linux","file permissions"]},{"location":"KB/notes/linux/filepermissions/#modifying-file-permissions","title":"Modifying File Permissions","text":"","tags":["linux","file permissions"]},{"location":"KB/notes/linux/filepermissions/#chmod-command","title":"chmod command","text":"<p>In Linux, you can modify file permissions using the <code>chmod</code> command. The <code>chmod</code> command stands for change mode, and it allows you to change the read, write, and execute permissions for the owner, group, and others of a file.</p> <p>The basic syntax of the <code>chmod</code> command is as follows:</p> <pre><code>chmod options permissions filename\\\n</code></pre> <p>Here, <code>options</code> refers to any additional options you might want to include, <code>permissions</code> refer to the new permissions you want to set, and <code>filename</code> refers to the name of the file whose permissions you want to change.</p> <p>For example, to give the owner of the file <code>myfile.txt</code> read and write permissions, you would use the following command:</p> <pre><code>chmod 600 myfile.txt\n</code></pre> <p>Here, <code>6</code> represents read and write permissions for the owner, and <code>0</code> represents no permissions for the group and others.</p> <p>To give read and execute permissions to the owner and group, and no permissions to others, you would use the following command:</p> <pre><code>chmod 750 myfile.txt\n</code></pre> <p>Here, <code>7</code> represents read, write, and execute permissions for the owner, <code>5</code> represents read and execute permissions for the group, and <code>0</code> represents no permissions for others.</p> <p>You can also use the <code>chmod</code> command with the <code>-R</code> option to modify the permissions of all files and directories within a directory recursively. For example:</p> <pre><code>chmod -R 755 mydirectory/\n</code></pre> <p>This command would give read, write, and execute permissions to the owner and read and execute permissions to the group and others for all files and directories within the <code>mydirectory</code> directory.</p>","tags":["linux","file permissions"]},{"location":"KB/notes/linux/lvm/","title":"Logical Volume Manager","text":"<p>LVM (aka Logical Volume Manager) is a tool for logical volume management which includes allocating disks, striping, mirroring and resizing logical volumes.</p>","tags":["linux","lvm"]},{"location":"KB/notes/linux/lvm/#overview","title":"Overview","text":"/dev/sda500GB        /dev/sdb1TB \u25bc        PV1500GB        PV21TB \u25bc      VG_SYSTEM1.5TB \u25bc        /rootext4        /homexfs        swap      <p>LVM consists of three main components:</p> <ul> <li>Physical Volume (PV)</li> <li>Volume Group (VG)</li> <li>Logical Volume (LV)</li> </ul>","tags":["linux","lvm"]},{"location":"KB/notes/linux/lvm/#physical-volume","title":"Physical Volume","text":"<p>A physical volume is a collection of disk partitions used to store all server data. These are the physical hard drives that are mounted to the CPU.</p> <p>Physical volumes are usually mounted on <code>/dev/sda</code>,<code>/dev/sdb</code>, and so on.</p>","tags":["linux","lvm"]},{"location":"KB/notes/linux/lvm/#creating-a-physical-volume","title":"Creating a Physical Volume","text":"<p>To create a physical volume use <code>pvcreate</code> command</p> <pre><code>pvcreate &lt;device_name&gt;\n</code></pre> <p>Example</p> <pre><code>pvcreate /dev/sda\n</code></pre> <p>The above command initializes/creates a physical volume.</p> <p>Note</p> <pre><code>Change `/dev/sda` according to your physical device name.\nTo list all the volumes available use `lsblk` or `fdisk -l`.\n</code></pre>","tags":["linux","lvm"]},{"location":"KB/notes/linux/lvm/#display-physical-volumes","title":"Display Physical Volumes","text":"<p>To display a physical volume use <code>pvdisplay</code> or <code>pvs</code> or <code>pvscan</code> commands.</p>","tags":["linux","lvm"]},{"location":"KB/notes/linux/lvm/#volume-groups","title":"Volume Groups","text":"<p>A volume group (VG) is what we create when we combine multiple physical volumes to create a single storage structure, equal to the storage capacity of the combined physical devices.</p>","tags":["linux","lvm"]},{"location":"KB/notes/linux/lvm/#creating-a-volume-group","title":"Creating a Volume Group","text":"<p>To create a volume group use <code>vgcreate</code> command</p> <pre><code>vgcreate &lt;vgname&gt; &lt;device_name&gt;\n</code></pre> <p>Example</p> <pre><code>vgcreate vg00 /dev/sda\n</code></pre>","tags":["linux","lvm"]},{"location":"KB/notes/linux/lvm/#display-volume-groups","title":"Display Volume Groups","text":"<p>To display a volume groups use <code>vgdisplay</code> or <code>vgs</code> or <code>vgscan</code> commands.</p>","tags":["linux","lvm"]},{"location":"KB/notes/linux/lvm/#extending-volume-group","title":"Extending Volume Group","text":"<p>To extend a volume group use <code>vgextend</code> command</p> <pre><code>vgextend &lt;vgname&gt; &lt;device_name&gt;\n</code></pre>","tags":["linux","lvm"]},{"location":"KB/notes/linux/lvm/#logical-volume","title":"Logical Volume","text":"<p>After you create a volume group, you can create logical volumes within that volume group. A logical volume, although it may reside on noncontiguous physical partitions or even on more than one physical volume, appears to users and applications as a single, contiguous, extensible disk volume</p>","tags":["linux","lvm"]},{"location":"KB/notes/linux/lvm/#creating-a-logical-volume","title":"Creating a Logical Volume","text":"<p>To create a logical volume use <code>lvcreate</code> command</p> <pre><code>lvcreate -n &lt;lvname&gt; -L &lt;lvsize_in_M/G&gt; &lt;vgname&gt;\n</code></pre> <p>Example</p> <pre><code>lvcreate -L 50G -n gfslv vg0\n</code></pre>","tags":["linux","lvm"]},{"location":"KB/notes/linux/lvm/#display-logical-volume","title":"Display Logical Volume","text":"<p>To display a logical volume use <code>lvdisplay</code> or <code>lvs</code> or <code>lvscan</code> commands.</p>","tags":["linux","lvm"]},{"location":"KB/notes/linux/lvm/#extending-logical-volume","title":"Extending Logical Volume","text":"<p>To extend a volume group use <code>lvextend</code> command</p> <pre><code>lvextend -L [+/-]&lt;size_to_be_inc/dec_number&gt; &lt;path_to_lv&gt; -r\n</code></pre> <p><code>-r</code> is used to automatically format the allocated storage to required type like ext4,xfs, etc.</p> <p>Example</p> <pre><code>lvextend -L +50G /dev/mapper/testvg-testlv -r\n</code></pre>","tags":["linux","lvm"]},{"location":"KB/notes/linux/sedcommand/","title":"SED - Stream Editor","text":"<p>The <code>sed</code> command (short for \"stream editor\") is a powerful text-processing utility in Linux and other Unix-like operating systems. It is used to perform basic and advanced text transformations on input text files or streams.</p> <p>The basic syntax of the <code>sed</code> command is as follows:</p> <pre><code>sed [options] 'command' input_file\n</code></pre> <p>The <code>command</code> part of the syntax is a series of editing commands that can be used to modify the input text. Some common <code>sed</code> commands are:</p> <ul> <li><code>s/pattern/replacement/</code>: Substitute the first occurrence of <code>pattern</code> with <code>replacement</code> in each line of the input text.</li> <li><code>s/pattern/replacement/g</code>: Substitute all occurrences of <code>pattern</code> with <code>replacement</code> in each line of the input text.</li> <li><code>d</code>: Delete the entire line from the input text.</li> <li><code>p</code>: Print the current line (or a specified range of lines) to the standard output.</li> </ul> <p>The <code>input_file</code> parameter is the name of the file that <code>sed</code> should process. If no input file is specified, <code>sed</code> reads from the standard input.</p> <p>Some common options of the <code>sed</code> command are:</p> <ul> <li><code>-i</code>: Edit files in place (i.e., modify the input file instead of printing the modified output to the standard output).</li> <li><code>-e</code>: Specify multiple editing commands.</li> <li><code>-n</code>: Suppress automatic printing of input lines.</li> </ul> Example <p>To replace the word \"apple\" with \"banana\" in a file named \"fruits.txt\", you can use the following command:</p> <pre><code>sed 's/apple/banana/g' fruits.txt\n</code></pre> <p>To edit the file in place, use the <code>-i</code> option:</p> <pre><code>sed -i 's/apple/banana/g' fruits.txt\n</code></pre>","tags":["linux","sed"]},{"location":"KB/procedures/ImportSSLToKeystore/","title":"How to import SSL to keystore","text":"<p>To import an SSL certificate into a Java keystore (<code>.jks</code> file), you can use the <code>keytool</code> command, which is included with the Java Development Kit (JDK). Here's a step-by-step guide:</p>","tags":["ssl","certificate","network"]},{"location":"KB/procedures/ImportSSLToKeystore/#1-obtain-the-ssl-certificate","title":"1. Obtain the SSL Certificate","text":"<p>Before importing the SSL certificate, ensure you have obtained it from the appropriate source, such as the Certificate Authority or the server where the SSL certificate is installed. The SSL certificate should be in a PEM or DER format.</p>","tags":["ssl","certificate","network"]},{"location":"KB/procedures/ImportSSLToKeystore/#2-determine-the-keystore-location","title":"2. Determine the Keystore Location","text":"<p>Identify the location of the keystore file where you want to import the SSL certificate. If you don't have a keystore file yet, you can create one using the <code>keytool</code> command.</p>","tags":["ssl","certificate","network"]},{"location":"KB/procedures/ImportSSLToKeystore/#3-import-the-ssl-certificate","title":"3. Import the SSL Certificate","text":"<p>Use the <code>keytool -importcert</code> command to import the SSL certificate into the keystore. The basic syntax is as follows:</p> <pre><code>keytool -importcert -alias &lt;alias_name&gt; -file &lt;certificate_file&gt; -keystore &lt;keystore_file&gt;\n</code></pre> <ul> <li><code>&lt;alias_name&gt;</code>: Choose an alias for the certificate entry in the keystore.</li> <li><code>&lt;certificate_file&gt;</code>: Path to the SSL certificate file.</li> <li><code>&lt;keystore_file&gt;</code>: Path to the keystore file.</li> </ul> <p>For example:</p> <pre><code>keytool -importcert -alias mycert -file mycertificate.crt -keystore keystore.jks\n</code></pre>","tags":["ssl","certificate","network"]},{"location":"KB/procedures/ImportSSLToKeystore/#4-provide-keystore-password","title":"4. Provide Keystore Password","text":"<p>During the import process, you may be prompted to provide the keystore password. If you haven't changed it, the default password for a new keystore is usually <code>changeit</code>.</p>","tags":["ssl","certificate","network"]},{"location":"KB/procedures/ImportSSLToKeystore/#5-verify-import","title":"5. Verify Import","text":"<p>After importing the SSL certificate, verify that it was successfully added to the keystore by listing its contents:</p> <pre><code>keytool -list -v -keystore &lt;keystore_file&gt;\n</code></pre> <p>Replace <code>&lt;keystore_file&gt;</code> with the path to your keystore file.</p>","tags":["ssl","certificate","network"]},{"location":"KB/procedures/ImportSSLToKeystore/#additional-tips","title":"Additional Tips","text":"<ul> <li>If the SSL certificate is in PEM format, you may need to convert it to DER format using the <code>openssl</code> command before importing it into the keystore. For example:   <pre><code>openssl x509 -outform der -in mycertificate.pem -out mycertificate.der\n</code></pre></li> <li>Always be cautious when importing SSL certificates, as they establish trust between your system and external entities. Ensure that you trust the source of the SSL certificate before importing it.</li> <li>It's a good practice to create a backup of your keystore file before making any changes.</li> </ul>","tags":["ssl","certificate","network"]},{"location":"KB/procedures/analyzeNginxConfiguration/","title":"How to Analyze Nginx configuration for security flaws","text":"<p>Gixy is a tool to analyze Nginx configuration. The main goal of Gixy is to prevent security misconfiguration and automate flaw detection. Currently supported Python versions are 2.7 and 3.5+. Right now Gixy can find:</p> <ol> <li>[ssrf] Server Side Request Forgery</li> <li>[http_splitting] HTTP Splitting</li> <li>[origins] Problems with referrer/origin validation</li> <li>[add_header_redefinition] Redefining of response headers by \u201cadd_header\u201d directive</li> <li>[host_spoofing] Request\u2019s Host header forgery</li> <li>[valid_referers] none in valid_referers</li> <li>[add_header_multiline] Multiline response headers</li> </ol>","tags":["linux","network","webserver"]},{"location":"KB/procedures/analyzeNginxConfiguration/#installation","title":"Installation","text":"<p>Type the following command:</p> <pre><code>pip install gixy\n</code></pre>","tags":["linux","network","webserver"]},{"location":"KB/procedures/analyzeNginxConfiguration/#how-do-i-use-gixy","title":"How do I use Gixy?","text":"<p>The syntax is:</p> <pre><code>$ gixy /etc/nginx/nginx.conf\n$ gixy [options] /etc/nginx/nginx.conf\n</code></pre> <p>Here is the output from my own site:</p> <pre><code>(venv) abhi@dev-vm:~$ gixy /etc/nginx/nginx.conf\n[nginx_parser]  WARNING File not found: /etc/nginx/modules-enabled/*.conf\n[nginx_parser]  WARNING File not found: /etc/nginx/conf.d/*.conf\n\n==================== Results ===================\nNo issues found.\n\n==================== Summary ===================\nTotal issues:\n    Unspecified: 0\n    Low: 0\n    Medium: 0\n    High: 0\n\n(venv) abhi@dev-vm:~$ gixy /etc/nginx/sites-available/*\n\n==================== Results ===================\nFile path: /etc/nginx/sites-available/default\nNo issues found.\n\n--------8&lt;--------8&lt;--------8&lt;--------8&lt;--------\nFile path: /etc/nginx/sites-available/reverse-proxy\nNo issues found.\n\n--------8&lt;--------8&lt;--------8&lt;--------8&lt;--------\nFile path: /etc/nginx/sites-available/wiki\nNo issues found.\n\n==================== Summary ===================\nTotal issues:\n    Unspecified: 0\n    Low: 0\n    Medium: 0\n    High: 0\n</code></pre>","tags":["linux","network","webserver"]},{"location":"KB/procedures/analyzeNginxConfiguration/#options","title":"Options","text":"<p>To see gixy option type:</p> <pre><code>$ gixy -h\n</code></pre> <p>Sample outputs:</p> <pre><code>positional arguments:\n  nginx.conf            Path to nginx.conf, e.g. /etc/nginx/nginx.conf\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONFIG_FILE, --config CONFIG_FILE\n                        config file path\n  --write-config CONFIG_OUTPUT_PATH\n                        takes the current command line args and writes them\n                        out to a config file at the given path, then exits\n  -v, --version         show program's version number and exit\n  -l, --level           Report issues of a given severity level or higher (-l\n                        for LOW, -ll for MEDIUM, -lll for HIGH)\n  -f {text,json,console}, --format {text,json,console}\n                        Specify output format\n  -o OUTPUT_FILE, --output OUTPUT_FILE\n                        Write report to file\n  -d, --debug           Turn on debug mode\n  --tests TESTS         Comma-separated list of tests to run\n  --skips SKIPS         Comma-separated list of tests to skip\n  --disable-includes    Disable \"include\" directive processing\n\nplugins options:\n  --origins-domains domains\n                        Default: *\n  --origins-https-only https_only\n                        Default: False\n  --add-header-redefinition-headers headers\n                        Default: x-frame-options,x-xss-protection,content-\n                        security-policy,x-content-type-options,cache-control\n\n\navailable plugins:\n    add_header_multiline\n    http_splitting\n    host_spoofing\n    origins\n    add_header_redefinition\n    valid_referers\n    ssrf\n</code></pre>","tags":["linux","network","webserver"]},{"location":"KB/procedures/analyzeNginxConfiguration/#reference","title":"Reference","text":"<ul> <li>gixy github</li> </ul>","tags":["linux","network","webserver"]},{"location":"KB/procedures/githuibsshKeySetup/","title":"Github SSH key setup","text":"","tags":["ssh","github","git"]},{"location":"KB/procedures/githuibsshKeySetup/#generating-a-new-ssh-key","title":"Generating a new SSH key","text":"<p>You can generate a new SSH key on your local machine. After you generate the key, you can add the public key to your account on GitHub.com to enable authentication for Git operations over SSH.</p> <p>Note</p> <p>GitHub improved security by dropping older, insecure key types on March 15, 2022. As of that date, DSA keys (ssh-dss) are no longer supported. You cannot add new DSA keys to your personal account on GitHub.com.</p> <p>RSA keys (ssh-rsa) with a valid_after before November 2, 2021 may continue to use any signature algorithm. RSA keys generated after that date must use a SHA-2 signature algorithm. Some older clients may need to be upgraded in order to use SHA-2 signatures.</p> <ul> <li>Open Terminal.</li> <li>Paste the text below, replacing the email used in the example with your GitHub email address.     <pre><code>ssh-keygen -t ed25519 -C \"your_email@example.com\"\n</code></pre></li> </ul> <p>Note</p> <p>If you are using a legacy system that doesn't support the Ed25519 algorithm, use: <pre><code>ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n</code></pre></p> <p>This creates a new SSH key, using the provided email as a label.</p> <pre><code>&gt; Generating public/private ALGORITHM key pair.\n</code></pre> <p>When you're prompted to \"Enter a file in which to save the key\", you can press Enter to accept the default file location. Please note that if you created SSH keys previously, ssh-keygen may ask you to rewrite another key, in which case we recommend creating a custom-named SSH key. To do so, type the default file location and replace <code>id_ALGORITHM</code> with your custom key name.</p> <p>Enter a file in which to save the key (/home/YOU/.ssh/id_ALGORITHM):[Press enter]</p> <ul> <li> <p>At the prompt, type a secure passphrase. For more information, see \"Working with SSH key passphrases.\"</p> <p>Enter passphrase (empty for no passphrase): [Type a passphrase]</p> <p>Enter same passphrase again: [Type passphrase again]</p> </li> </ul>","tags":["ssh","github","git"]},{"location":"KB/procedures/githuibsshKeySetup/#adding-your-ssh-key-to-the-ssh-agent","title":"Adding your SSH key to the ssh-agent","text":"<p>Before adding a new SSH key to the ssh-agent to manage your keys, you should have checked for existing SSH keys and generated a new SSH key.</p> <ul> <li> <p>Start the ssh-agent in the background.</p> <pre><code>$ eval \"$(ssh-agent -s)\"\n&gt; Agent pid 59566\n</code></pre> <p>Depending on your environment, you may need to use a different command. For example, you may need to use root access by running <code>sudo -s -H</code> before starting the ssh-agent, or you may need to use <code>exec ssh-agent bash</code> or <code>exec ssh-agent zsh</code> to run the ssh-agent.</p> </li> <li> <p>Add your SSH private key to the ssh-agent.</p> <p>If you created your key with a different name, or if you are adding an existing key that has a different name, replace id_ed25519 in the command with the name of your private key file.</p> <pre><code>ssh-add ~/.ssh/id_ed25519\n</code></pre> <p>Add the SSH public key to your account on GitHub.</p> </li> </ul>","tags":["ssh","github","git"]},{"location":"KB/procedures/githuibsshKeySetup/#reference","title":"Reference","text":"<ul> <li>Github - Generating a new SSH key and adding it to the ssh-agent</li> </ul>","tags":["ssh","github","git"]},{"location":"KB/procedures/linuxServerHardening/","title":"Linux Server Hardening","text":"","tags":["linux","setup"]},{"location":"KB/procedures/linuxServerHardening/#install-security-updates-and-patches","title":"Install security updates and patches","text":"<p>Keeping your server updated is the first line of defense.</p> aptyum <p>Distros Applicable : <code>Debian/Ubuntu</code></p> <p>Install latest Updates</p> <pre><code>sudo apt update &amp;&amp; sudo apt upgrade -y\n</code></pre> <p>Enable automatic security updates:</p> <p><pre><code>sudo apt install unattended-upgrades\nsudo dpkg-reconfigure --priority=low unattended-upgrades\n</code></pre> Remove unnecessary packages:</p> <pre><code>sudo apt autoremove -y\n</code></pre> <p>Distros Applicable : <code>RHEL/CentOS/OCL</code></p> <p>Install latest Updates</p> <pre><code>sudo yum update -y # Fedora\nsudo dnf update -y\n</code></pre> <p>Remove unnecessary packages:</p> <pre><code>sudo yum autoremove -y\n</code></pre>","tags":["linux","setup"]},{"location":"KB/procedures/linuxServerHardening/#strong-passwords","title":"Strong Passwords","text":"<p>Use a strong password consists of a variety of characters (alphanumeric, numbers, special characters).</p> <p>Password Generator </p>","tags":["linux","setup"]},{"location":"KB/procedures/networkShareAutoMount/","title":"Network Share Automount on Boot","text":"<p>This guide shows you how to setup network share to auto mount during boot.</p>","tags":["linux","network","fstab","networkshare","nfs","samba","cifs","utils"]},{"location":"KB/procedures/networkShareAutoMount/#verify-connection","title":"Verify Connection","text":"<p>Check if your network share is accessible from the target system where you are setting up this <code>fstab</code> entry</p> <pre><code>sudo mount -t cifs -o username=user //server_name/share_name /mnt/networkshare/\n</code></pre>","tags":["linux","network","fstab","networkshare","nfs","samba","cifs","utils"]},{"location":"KB/procedures/networkShareAutoMount/#backup-etcfstab","title":"Backup /etc/fstab","text":"<p>Backup fstab file to your home directory. Use <code>.bak</code> extension for backups.</p> <pre><code>cp /etc/fstab ~/system_backups\n</code></pre> <p>Save all your original backups files under ~/system_backups</p>","tags":["linux","network","fstab","networkshare","nfs","samba","cifs","utils"]},{"location":"KB/procedures/networkShareAutoMount/#create-mount-folder","title":"Create Mount Folder","text":"<p>Now create a directory to where the Network share should be mounted</p> <p>In Linux <code>/mnt</code> or <code>/media</code> are used to mount external drives</p> <pre><code>mkdir /mnt/networkshare\n</code></pre> <p><code>networkshare</code> van be replaced with any name you like. Use an appropriate name to understand what files are available in the share</p>","tags":["linux","network","fstab","networkshare","nfs","samba","cifs","utils"]},{"location":"KB/procedures/networkShareAutoMount/#install-additional-required-packages","title":"Install additional required packages","text":"<p>Install <code>cifs-utils</code> package to be able to mount the share drive to linux systems</p> <pre><code>sudo apt install cifs-utils -y\n</code></pre>","tags":["linux","network","fstab","networkshare","nfs","samba","cifs","utils"]},{"location":"KB/procedures/networkShareAutoMount/#add-fstab-entry","title":"Add <code>fstab</code> Entry","text":"<p>Linux mounts all the drives to the mount points during system boot.</p> <pre><code>//server_name/share_name /mnt/networkshare cifs username=user,password=userpassword vers=2.0 0 0\n</code></pre> <p>Update values to your server specific share</p> <ul> <li><code>server_name</code></li> <li><code>share_name</code></li> <li><code>networkshare</code></li> <li><code>user</code></li> <li><code>userpassword</code></li> </ul> <p>Now save and exit the fstab file.</p>","tags":["linux","network","fstab","networkshare","nfs","samba","cifs","utils"]},{"location":"KB/procedures/networkShareAutoMount/#mounting-the-network-share","title":"Mounting the network share","text":"<p>Now that the fstab entry has been added to mount the network drive. These drives wont mount automatically until you reboot the system. You may have to mount the drives manually for this time.</p>","tags":["linux","network","fstab","networkshare","nfs","samba","cifs","utils"]},{"location":"KB/procedures/networkShareAutoMount/#manual-mounting","title":"Manual Mounting","text":"<p>To mount the drives manually, you need to reload the systemd as it still uses the old version of the fstab.</p> <p>To update systemd to use the latest version reload the system with the below command.</p> <pre><code>systemctl daemon-reload\n</code></pre> <p>Now run mount to attach all the drives that are available in <code>/etc/fstab</code></p> <pre><code>mount -a\n</code></pre>","tags":["linux","network","fstab","networkshare","nfs","samba","cifs","utils"]},{"location":"KB/procedures/sslCertSetupforDuckdns/","title":"SSL cert setup for duckdns","text":"<p>There are Certification Authorities that allow to create trusted certificates.</p> <p>Using them will avoid the warnings that we receive.</p> <p>The Certificate Authority I\u2019ll use for this is\u00a0https://letsencrypt.org/:</p> <p>Let\u2019s Encrypt is a free, automated, and open Certificate Authority.</p> <p>The process of creating a certificate and updating it (when it expires) is a little bit involved and while we could do it manually, for this step I\u2019ll use a script that takes care of a lot of details directly for us.</p> <p>You can find it there:\u00a0https://dehydrated.io/</p> <p>Dehydrated is a client for signing certificates with an ACME-server (currently only provided by Let\u2019s Encrypt) implemented as a relatively simple bash-script.</p> <p>The bash-script it\u2019s referring to is here:\u00a0https://github.com/lukas2511/dehydrated</p>","tags":["linux","certificate","ssl","ddns"]},{"location":"KB/procedures/sslCertSetupforDuckdns/#dehydrated","title":"Dehydrated","text":"<p>If you want to grab the code from github you could checkout it with git or svn at the url: \u201chttps://github.com/lukas2511/dehydrated.git\u201d</p>","tags":["linux","certificate","ssl","ddns"]},{"location":"KB/procedures/sslCertSetupforDuckdns/#just-grab-the-code","title":"Just grab the code","text":"<p>Let\u2019s now download it straight from the source:</p>","tags":["linux","certificate","ssl","ddns"]},{"location":"KB/procedures/sslCertSetupforDuckdns/#with-git","title":"With git","text":"<p>With git you can simply grab the code (and it will create the dehydrated folder for you).</p> <pre><code>git clone https://github.com/lukas2511/dehydrated.git\n</code></pre> <p>That\u2019s the output:</p> <pre><code>~/certs $ git clone https://github.com/lukas2511/dehydrated.git\n\nCloning into 'dehydrated'...\n\nremote: Enumerating objects: 8, done.\n\nremote: Counting objects: 100% (8/8), done.\n\nremote: Compressing objects: 100% (7/7), done.\n\nremote: Total 1922 (delta 1), reused 5 (delta 1), pack-reused 1914\n\nReceiving objects: 100% (1922/1922), 637.08 KiB | 757.00 KiB/s, done.\n\nResolving deltas: 100% (1200/1200), done.\n</code></pre> <p>Enter in the folder to continue:</p> <p>```sh cd dehydrated/ <pre><code>### Make it executable\n\nOne important step is now to make the script executable.\n\nThis can be easily done with the command:\n</code></pre> chmod a+x dehydrated <pre><code>Ok, if we follow the documentation it says that before executing it we need to specify the domain we want to secure inside a file named \u201c_domains.txt_\u201d (you can read this here: \u201chttps://github.com/lukas2511/dehydrated/blob/master/docs/domains_txt.md\u201d)\n\nLet\u2019s do this then:\n</code></pre> nano domains.txt <pre><code>Inside this file just write the name of your website, that should be something like this, naturally with your specific domain specified:\n</code></pre> .duckdns.org <pre><code>Once this is done we need to edit another file \u201c_config_\u201d\n</code></pre> nano config <pre><code>You can read about it here: \u201c[https://github.com/lukas2511/dehydrated#config](https://github.com/lukas2511/dehydrated#config)\u201d\n\nWrite this inside it:\n\n```config\n# Which challenge should be used? Currently http-01 and dns-01 are supported\n\nCHALLENGETYPE=\"dns-01\"\n\n# Script to execute the DNS challenge and run after cert generation\n\nHOOK=\"${BASEDIR}/hook.sh\"\n</code></pre>","tags":["linux","certificate","ssl","ddns"]},{"location":"KB/procedures/sslCertSetupforDuckdns/#under-the-hood","title":"Under the hood","text":"<p>If you are not interested into the details of what we just wrote, skip this section, otherwise bare with me.</p> <p>Going back to Let\u2019s Encrypt, let\u2019s read more of its definition:</p> <p>\u201cTo enable HTTPS on your website, you need to get a certificate (a type of file) from a Certificate Authority (CA). Let\u2019s Encrypt is a CA. In order to get a certificate for your website\u2019s domain from Let\u2019s Encrypt, you have to demonstrate control over the domain. With Let\u2019s Encrypt, you do this using software that uses the\u00a0ACME protocol, which typically runs on your web host.\u201d</p> <p>Dehydrated is one of this software (well, script in this case) that use the ACME protocol we need. In fact, looking at dehydrated once again:</p> <p>\u201cDehydrated is a client for signing certificates with an ACME-server (e.g. Let\u2019s Encrypt) implemented as a relatively simple (zsh-compatible) bash-script. This client supports both ACME v1 and the new ACME v2 including support for wildcard certificates!\u201d</p> <p>Now, Let\u2019s Encrypt need a demonstration that you control the domains you want to secure. For this we use the \u201cdns-01\u201d verification (you can read about other types of verification on their website). The details are here:\u00a0https://docs.certifytheweb.com/docs/dns-validation.html</p> <p>Dehydrated supports \u201cdns-01\u201d (https://github.com/lukas2511/dehydrated/blob/master/docs/dns-verification.md).</p> <p>As described in that documentation, this type of verification requires you to be able to create a specific TXT DNS record (from\u00a0wikipedia: \u201ca type of resource record in the Domain Name System (DNS) used to provide the ability to associate arbitrary text with a host or other name, such as human readable information about a server, network, data center, or other accounting information.\u201c) for each hostname included in the certificate.</p> <p>Dehydrated then specified that we need a hook script that deploys the challenge to our DNS server.</p> <p>In order to do this, dehydrated will invoke our hook script\u2026 more on this in a bit.</p> <p>As a matter of fact, DuckDNS allows us to generate this TXT record.</p> <p>Looking at the documentation (https://www.duckdns.org/spec.jsp):</p> <p>\u201cThe TXT update URL can be requested on HTTPS or HTTP.\u201d</p> <p>and again:</p> <p>\u201cYou can update your domain(s) TXT record with a single HTTPS get to DuckDNS your TXT record will apply to all sub-subdomains under your domain e.g. xxx.yyy.duckdns.org shares the same TXT record as yyy.duckdns.org\u201d</p> <p>As an example it\u2019s given:</p> <pre><code>https://www.duckdns.org/update?domains={YOURVALUE}&amp;token={YOURVALUE}&amp;txt={YOURVALUE}[&amp;verbose=true][&amp;clear=true]\n</code></pre> <p>as you will see, we\u2019ll do this in our dehydrated hook, using something like:</p> <pre><code>curl \"https://www.duckdns.org/update?domains=$domain&amp;token=$token&amp;txt=$4\"\n</code></pre> <p>The \u201c$4\u201d parameter is explained in dehydrated documentation (all the parameters):</p> <ul> <li>$1 an operation name (clean_challenge, deploy_challenge, deploy_cert, invalid_challenge or request_failure) and some operands for that.</li> </ul> <p>For deploy_challenge</p> <ul> <li>$2 is the domain name for which the certificate is required,</li> <li>$3 is a \u201cchallenge token\u201d (which is not needed for dns-01), and</li> <li>$4 is a token which needs to be inserted in a TXT record for the domain.</li> </ul> <p>The DuckDNS hook is the one indicated online always in the documentation:\u00a0https://github.com/lukas2511/dehydrated/wiki/DNS-01-hook-for-DuckDNS</p> <p>As another example, to clear the token the real important part is only the last parameter to pass to DuckDNS: \u201cclear=true\u201c.</p> <p>Note that the challenge token is what we\u2019ll receive from Let\u2019s Encrypt.</p> <p>So, the full logic flow is essentially the following:</p> <ul> <li>We request Let\u2019s Encrypt (our Certificate Authority) to generate a certificate for our domain</li> <li>We receive the certificate and the challenge token to use to prove that we control the domain</li> <li>We tell DuckDNS to update the TXT record for our domain to match the token used for the challenge</li> <li>We then tell Let\u2019s Encrypt validate the domain (more here:\u00a0https://letsencrypt.org/how-it-works/)</li> </ul> <p>This should help in clarifying what is this \u201cdns-01\u201d, how we tell DuckDNS to verify it and the meaning of the hook script.</p>","tags":["linux","certificate","ssl","ddns"]},{"location":"KB/procedures/sslCertSetupforDuckdns/#ok-where-were-we","title":"Ok, Where were we\u2026","text":"<p>If you read the section above you should know why we need the hook script. In any case, we need a hook to help with the DNS challenge.</p> <p>In the same script we\u2019ll also provide a way of restarting the Home Assistant service and this is used when the certificate is created/updated.</p> <p>Create a \u201chook.sh\u201d file:</p> <pre><code>nano hook.sh\n</code></pre> <p>The content comes from the one provided by Dehydrated as an example:\u00a0https://github.com/lukas2511/dehydrated/wiki/DNS-01-hook-for-DuckDNS</p> <p>I modified the \u201cdeploy_cert\u201d section in order to restart the service using the \u201cpi\u201d account (because we need the sudo privileges).</p> <p>Anyway, this is the content:</p> <pre><code>#!/usr/bin/env bash\n\nset -e\n\nset -u\n\nset -o pipefail\n\ndomain=\"&lt;your_domain&gt;\"\n\ntoken=\"&lt;your_token&gt;\"\n\ncase \"$1\" in\n\n\u00a0\u00a0\u00a0\u00a0\"deploy_challenge\")\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0curl \"https://www.duckdns.org/update?domains=$domain&amp;token=$token&amp;txt=$4\"\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0;;\n\n\u00a0\u00a0\u00a0\u00a0\"clean_challenge\")\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0curl \"https://www.duckdns.org/update?domains=$domain&amp;token=$token&amp;txt=removed&amp;clear=true\"\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0;;\n\n\u00a0\u00a0\u00a0\u00a0\"deploy_cert\")\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo \"edit this section to do whatever you need to do to deploy and restart your service\"\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0;;\n\n\u00a0\u00a0\u00a0\u00a0\"unchanged_cert\")\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0;;\n\n\u00a0\u00a0\u00a0\u00a0\"startup_hook\")\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0;;\n\n\u00a0\u00a0\u00a0\u00a0\"exit_hook\")\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0;;\n\n\u00a0\u00a0\u00a0\u00a0*)\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo Unknown hook \"${1}\"\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0exit 0\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0;;\n\nesac\n</code></pre> <p>NOTE: change: -  with your specific DuckDNS domain, in the same way you did above -  with your DuckDNS token <p>(if you t follow the other posts or you have a different installation, ensure to change the\u00a0\u201cdeploy_cert\u201d section as well to correctly restart the Home Assistant service)</p> <p>Last thing to do is make it executable:</p> <pre><code>chmod 755 hook.sh\n</code></pre>","tags":["linux","certificate","ssl","ddns"]},{"location":"KB/procedures/sslCertSetupforDuckdns/#checkpoint","title":"Checkpoint","text":"<p>At the end of all of this verify that this is what you have in your folder:</p> <pre><code>pi@raspberrypi:~/certs/dehydrated $ ls -la\n\ntotal 704\n\ndrwxr-xr-x 2 pi pi\u00a0\u00a0 4096 Oct 20 23:14 .\n\ndrwxr-xr-x 4 pi pi\u00a0\u00a0 4096 Oct 20 23:03 ..\n\n-rw-r--r-- 1 pi pi\u00a0\u00a0\u00a0\u00a0195 Oct 20 23:08 config\n\n-rwxr-xr-x 1 pi pi 697126 Oct 20 23:03 dehydrated\n\n-rw-r--r-- 1 pi pi\u00a0\u00a0\u00a0\u00a0 18 Oct 20 23:07 domains.txt\n\n-rwxr-xr-x 1 pi pi\u00a0\u00a0\u00a0\u00a0661 Oct 20 23:14 hook.sh\n</code></pre>","tags":["linux","certificate","ssl","ddns"]},{"location":"KB/procedures/sslCertSetupforDuckdns/#register-with-letsencrypt","title":"Register with letsencrypt","text":"<p>From the (dehydrated) documentation:</p> <p>\u201cBefore any certificates can be requested, Dehydrated needs to acquire an account with the Certificate Authorities.</p> <p>Optionally, an email address can be provided. It will be used to e.g. notify about expiring certificates. You will usually need to accept the Terms of Service of the CA.</p> <p>Dehydrated will notify if no account is configured.</p> <p>Run with \u2013register \u2013accept-terms to create a new account.\u201d</p> <p>If you run dehydrated without the \u201c\u2013accept-terms\u201d you can see the latest terms link.</p> <p>If you want to register a mail, edit your config file adding (with your email):</p> <pre><code># E-mail to use during the registration (default: &lt;unset&gt;)\n\nCONTACT_EMAIL=&lt;your_email&gt;\n</code></pre> <p>Time to register!</p> <p>When you are ready run dehydrated with the registration options:</p> <pre><code>./dehydrated --register --accept-terms\n</code></pre> <p>That should produce this output:</p> <pre><code>pi@raspberrypi:~/certs/dehydrated $ ./dehydrated --register --accept-terms\n\n# INFO: Using main config file ~/certs/dehydrated/config\n\n+ Generating account key...\n\n+ Registering account key with ACME server...\n\n+ Done!\n</code></pre> <p>It created a new folder \u201caccounts\u201d that will contain a folder with the information about the registrations with letsencrypt.</p>","tags":["linux","certificate","ssl","ddns"]},{"location":"KB/procedures/sslCertSetupforDuckdns/#create-the-certificate","title":"Create the certificate","text":"<p>We can now happily created the wanted certificate!</p> <p>Just run dehydrated with this option:</p> <pre><code>./dehydrated -c\n</code></pre> <p>and this should be the output:</p> <pre><code>~/certs/dehydrated $ ./dehydrated -c\n\n# INFO: Using main config file ~/certs/dehydrated/config\n\nUnknown hook this_hookscript_is_broken__dehydrated_is_working_fine__please_ignore_unknown_hooks_in_your_script\n\n+ Creating chain cache directory ~/certs/dehydrated/chains\n\nProcessing &lt;your_domain&gt;.duckdns.org\n\n+ Creating new directory ~/certs/dehydrated/certs/&lt;your_domain&gt;.duckdns.org ...\n\nUnknown hook this_hookscript_is_broken__dehydrated_is_working_fine__please_ignore_unknown_hooks_in_your_script\n\n+ Signing domains...\n\n+ Generating private key...\n\n+ Generating signing request...\n\n+ Requesting new certificate order from CA...\n\n+ Received 1 authorizations URLs from the CA\n\n+ Handling authorization for &lt;your_domain&gt;.duckdns.org\n\n+ 1 pending challenge(s)\n\n+ Deploying challenge tokens...\n\nOK\n\n+ Responding to challenge for &lt;your_domain&gt;.duckdns.org authorization...\n\n+ Challenge is valid!\n\n+ Cleaning challenge tokens...\n\nOK\n\n+ Requesting certificate...\n\n+ Checking certificate...\n\n+ Done!\n\n+ Creating fullchain.pem...\n\nPassword:\n\n+ Done!\n</code></pre> <p>Note that at the end the script is requesting for the sudo password for pi.</p> <p>This is because the hook is trying to execute \u201cdeploy_cert\u201d that tries to restart the service.</p> <p>If you didn\u2019t change the default hook script in the way I described above, you should receive the request of the sudo password for \u201cmyuser\u201d. At that point you will probably need to kill the script [CTRL+C].</p> <p>Everything is still ok, but you will manually need to restart the service.</p>","tags":["linux","certificate","ssl","ddns"]},{"location":"KB/procedures/sslCertSetupforDuckdns/#configure-the-service","title":"Configure the service","text":"<p>As already mentioned in the previous section, the configuration really varies from service to service, so you\u2019ll need to verify how to specify the certificate and key in the custom settings of your service.</p> <p>The certificate and key can be found in:</p> <pre><code>ssl_certificate: ~/certs/dehydrated/certs/&lt;your_domain&gt;.duckdns.org/fullchain.pem\n\nssl_key: ~/certs/dehydrated/certs/&lt;your_domain&gt;.duckdns.org/privkey.pem\n</code></pre>","tags":["linux","certificate","ssl","ddns"]},{"location":"KB/procedures/sslCertSetupforDuckdns/#test-it-out","title":"Test it out","text":"<p>You can now open the browser and try again to reach your Service website using HTTPS.</p> <p>This time the warning should have disappeared and everything should be nice and clean!</p>","tags":["linux","certificate","ssl","ddns"]},{"location":"KB/procedures/sslCertSetupforDuckdns/#reference","title":"Reference","text":"<ul> <li>Certificates and SSL/HTTPS with DuckDNS and Let\u2019s Encrypt \u2013 Riccardo Tramma</li> </ul>","tags":["linux","certificate","ssl","ddns"]},{"location":"KB/procedures/linux-server-hardening/apparmor-selinux/","title":"AppArmor / SELinux","text":"<p>Ubuntu/Debian AppArmor: <pre><code>sudo apt install apparmor apparmor-utils\nsudo aa-status\nsudo aa-enforce /etc/apparmor.d/*\n</code></pre> RHEL/Fedora: use SELinux.</p>"},{"location":"KB/procedures/linux-server-hardening/backup/","title":"Backup &amp; Recovery","text":"<ul> <li>Regular automated backups</li> <li>Verify restores</li> <li>Encrypt backups if possible</li> </ul>"},{"location":"KB/procedures/linux-server-hardening/filesystem/","title":"File System Security","text":"<p>Secure mount points: <pre><code>/dev/sda1 / ext4 defaults,noexec,nosuid,nodev 0 1\n/dev/sda2 /tmp ext4 defaults,noexec,nosuid,nodev 0 2\n</code></pre> Limit world-writable files: <pre><code>chmod 1777 /tmp\nfind / -type f -perm /o+w -exec ls -l {} \\;\n</code></pre> Protect critical files: <pre><code>sudo chattr +i /etc/passwd\n</code></pre></p>"},{"location":"KB/procedures/linux-server-hardening/firewall-network/","title":"Firewall &amp; Network Security","text":"<p>Configure firewall: <pre><code>sudo ufw default deny incoming\nsudo ufw default allow outgoing\nsudo ufw allow 2222/tcp\nsudo ufw enable\n</code></pre> Disable unused services: <pre><code>sudo systemctl disable telnet ftp\nsudo systemctl stop telnet ftp\n</code></pre> Check open ports: <pre><code>sudo ss -tuln\nsudo netstat -tulpn\n</code></pre></p>"},{"location":"KB/procedures/linux-server-hardening/kernel/","title":"Kernel &amp; System Hardening","text":"<p>Disable unnecessary kernel modules: <pre><code>lsmod\nsudo modprobe -r module_name\n</code></pre> Enable TCP/IP security: <pre><code>sudo sysctl -w net.ipv4.conf.all.rp_filter=1\nsudo sysctl -w net.ipv4.tcp_syncookies=1\n</code></pre> Persist in /etc/sysctl.conf.</p>"},{"location":"KB/procedures/linux-server-hardening/logging-auditing/","title":"Logging &amp; Auditing","text":"<p>Enable auditing: <pre><code>sudo apt install auditd\nsudo systemctl enable auditd\nsudo auditctl -w /etc/passwd -p wa -k passwd_changes\n</code></pre> Use logrotate for logs. Centralize logs using rsyslog or ELK.</p>"},{"location":"KB/procedures/linux-server-hardening/malware-id/","title":"Malware &amp; Intrusion Detection","text":"<p>Install ClamAV: <pre><code>sudo apt install clamav clamav-daemon\n</code></pre> Install AIDE: <pre><code>sudo apt install aide\nsudo aideinit\nsudo aide --check\n</code></pre></p>"},{"location":"KB/procedures/linux-server-hardening/miscellaneous/","title":"Miscellaneous","text":"<p>Disable IPv6: <pre><code>sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1\n</code></pre> Limit cron/at access. Check for rootkits: <pre><code>sudo apt install rkhunter chkrootkit\nsudo rkhunter --check\n</code></pre></p>"},{"location":"KB/procedures/linux-server-hardening/services/","title":"Service Hardening","text":"<p>Disable unnecessary services: <pre><code>sudo systemctl list-unit-files | grep enabled\nsudo systemctl disable service_name\n</code></pre> Run services with least privileges.</p>"},{"location":"KB/procedures/linux-server-hardening/ssh-hardening/","title":"SSH Hardening","text":"<p>Secure SSH access.</p> <p>Change default port in /etc/ssh/sshd_config: <pre><code>Port 2222\nPermitRootLogin no\nPasswordAuthentication no\n</code></pre> Restart SSH: <pre><code>sudo systemctl restart sshd\n</code></pre> Key-based authentication: <pre><code>ssh-keygen -t ed25519 -C 'email@example.com'\nssh-copy-id -i ~/.ssh/id_ed25519.pub user@server\n</code></pre></p>"},{"location":"KB/procedures/linux-server-hardening/system-updates/","title":"System Updates &amp; Package Management","text":"<p>Keeping your server updated is the first line of defense.</p> <pre><code># Debian/Ubuntu\nsudo apt update &amp;&amp; sudo apt upgrade -y\n# RHEL/CentOS\nsudo yum update -y\n# Fedora\nsudo dnf update -y\n</code></pre> <p>Enable automatic security updates: <pre><code>sudo apt install unattended-upgrades\nsudo dpkg-reconfigure --priority=low unattended-upgrades\n</code></pre> Remove unnecessary packages: <pre><code>sudo apt autoremove -y\nsudo yum autoremove -y\n</code></pre></p>"},{"location":"KB/procedures/linux-server-hardening/user-account/","title":"User &amp; Account Management","text":"<p>Manage users and permissions.</p> <p>Remove or lock unused accounts: <pre><code>sudo deluser username\nsudo passwd -l username\n</code></pre> Enforce strong passwords via PAM: <pre><code>sudo apt install libpam-pwquality\nsudo vim /etc/pam.d/common-password\n# add: password requisite pam_pwquality.so retry=3 minlen=12 difok=3\n</code></pre> Account expiration: <pre><code>sudo chage -M 90 username\nsudo chage -I 30 username\n</code></pre></p>"},{"location":"KB/procedures/setup-guides/bookstack/","title":"Bookstack Setup","text":"","tags":["linux","bookstack","wiki"]},{"location":"KB/procedures/setup-guides/bookstack/#requirements","title":"Requirements","text":"","tags":["linux","bookstack","wiki"]},{"location":"KB/procedures/setup-guides/bookstack/#php-802","title":"php &gt;= 8.0.2","text":"<ul> <li>For installation and maintenance, you\u2019ll need to be able to run php from the command line.</li> <li>Required Extensions: OpenSSL, PDO, MBstring, iconv, Tokenizer, GD, MySQL, SimpleXML &amp; DOM.</li> </ul> Debian <pre><code>apt install php8.2-fpm php-cli php-gd php-mysql php-xml php-mbstring php-curl\n</code></pre> <p>uncommnet the lines in php.ini on <code>/etc/php/8.2/fpm/php.ini</code></p> <pre><code>extension=curl\nextension=mbstring\nextension=exif      ; Must be after mbstring as it depends on it\nextension=openssl\nextension=pdo_mysql\n</code></pre>","tags":["linux","bookstack","wiki"]},{"location":"KB/procedures/setup-guides/bookstack/#mysql-57-or-mariadb-102","title":"MySQL &gt;= 5.7 or MariaDB &gt;= 10.2","text":"<ul> <li>For the storage of BookStack content and data.</li> <li>Single Database (All permissions advised since application manages schema)</li> </ul> Debian <pre><code>apt install mariadb-server\n</code></pre>","tags":["linux","bookstack","wiki"]},{"location":"KB/procedures/setup-guides/bookstack/#git-version-control","title":"Git Version Control","text":"<p>For application of updates when following our standard process.</p> Debian <pre><code>apt install git\n</code></pre>","tags":["linux","bookstack","wiki"]},{"location":"KB/procedures/setup-guides/bookstack/#a-php-compatible-webserver","title":"A PHP Compatible Webserver","text":"<p>For usage with PHP and for serving static files.</p> <p>NGINX or APACHE</p>","tags":["linux","bookstack","wiki"]},{"location":"KB/procedures/setup-guides/bookstack/#composer-v20","title":"Composer &gt;= v2.0","text":"<ul> <li>For installation and management of our PHP dependencies.</li> </ul> <p>follow the page linked and then move the file to <code>PATH</code></p> <pre><code>sudo mv composer.phar /usr/local/bin/composer\n</code></pre>","tags":["linux","bookstack","wiki"]},{"location":"KB/procedures/setup-guides/bookstack/#installation","title":"Installation","text":"<ul> <li>Clone the release branch of the BookStack GitHub repository into a folder.</li> </ul> <pre><code>git clone https://github.com/BookStackApp/BookStack.git --branch release --single-branch\n</code></pre> <ul> <li><code>cd</code> into the application folder and run</li> </ul> <pre><code>composer install --no-dev\n</code></pre> <ul> <li>Copy the <code>.env.example</code> file to <code>.env</code> and fill with your own database and mail details.</li> <li>Ensure the <code>storage</code>, <code>bootstrap/cache</code> &amp; <code>public/uploads</code> folders are writable by the web server.</li> <li>In the application root, Run <code>php artisan key:generate</code> to generate a unique application key.</li> <li>If not using Apache or if <code>.htaccess</code> files are disabled you will have to create some URL rewrite rules as shown below.</li> <li>Set the web root on your server to point to the BookStack public folder. This is done with the root setting on Nginx or the DocumentRoot setting on Apache.</li> <li>Run <code>php artisan migrate</code> to update the database.</li> <li>Done! You can now login using the default admin details <code>admin@admin.com</code> with a password of <code>password</code>. You should change these details immediately after logging in for the first time.</li> </ul>","tags":["linux","bookstack","wiki"]},{"location":"KB/procedures/setup-guides/dnsmasq/","title":"DNS Server Setup","text":"<p>To setup Local Lan based DNS Server usuing dnsmasq.</p>","tags":["linux","network","utils"]},{"location":"KB/procedures/setup-guides/dnsmasq/#install-dnsmasq","title":"Install dnsmasq","text":"<p>First install dnsmasq package. From Terminal enter:</p> Debian <pre><code>sudo apt install dnsmasq\n</code></pre>","tags":["linux","network","utils"]},{"location":"KB/procedures/setup-guides/dnsmasq/#configuration","title":"Configuration","text":"<p>Uncomment/update the below lines in <code>/etc/dnsmasq.conf</code></p> <p>Never forward plain names (without a dot or domain part)</p> <pre><code>domain-needed\n</code></pre> <p>Never forward addresses in the non-routed address spaces.</p> <pre><code>bogus-priv\n</code></pre> <p>Add local-only domains here, queries in these domains are answered from /etc/hosts or DHCP only.</p> <pre><code>local=/a.sh/\n</code></pre> <p>If you want dnsmasq to listen on by address (remember to include 127.0.0.1 if you use this.)</p> <pre><code>listen-address=192.168.1.11,127.0.0.1\n</code></pre> <p>Set this if you want to have a domain automatically added to simple names in a hosts-file.</p> <pre><code>expand-hosts\n</code></pre> <p>Set the domain for dnsmasq. this is optional, but if it is set, it does the following things.</p> <ol> <li>Allows DHCP hosts to have fully qualified domain names, as long     as the domain part matches this setting.</li> <li>Sets the \"domain\" DHCP option thereby potentially setting the     domain of all systems configured by DHCP</li> <li>Provides the domain part for \"expand-hosts\"</li> </ol> <pre><code>domain=a.sh\n</code></pre> <p>To set the cachesize.</p> <pre><code>cache-size=1000\n</code></pre>","tags":["linux","network","utils"]},{"location":"KB/procedures/setup-guides/dnsmasq/#adding-hostsrecords","title":"Adding hosts/records","text":"<p>Add hosts to <code>/etc/hosts</code> file to be able to resolve by dnsmasq.</p> Example <pre><code>127.0.0.1       localhost\n\n# Manually added server list\n\n192.168.1.1 router\n192.168.1.11 zeb.a.sh zeb wiki torrent\n192.168.1.12 hpnotebook\n</code></pre>","tags":["linux","network","utils"]},{"location":"KB/procedures/setup-guides/dnsmasq/#advanced-setup","title":"Advanced Setup","text":"<p>This will get you a basic dns setup for more advanced setup refer</p> <ul> <li>Debian - dnsmasq</li> </ul>","tags":["linux","network","utils"]},{"location":"KB/procedures/setup-guides/nginx/","title":"Nginx Setup","text":"","tags":["linux","network","utils","nginx"]},{"location":"KB/procedures/setup-guides/nginx/#install-nginx","title":"Install Nginx","text":"<p>To install Nginx, use following command:</p> Debian <pre><code>sudo apt update\nsudo apt install nginx\n</code></pre> <p>After installing it, you already have everything you need.</p> <p>You can point your browser to your server IP address. You should see a default nginx page.</p> <p>The root folder for the webpage is located at <code>/var/www/</code></p>","tags":["linux","network","utils","nginx"]},{"location":"KB/procedures/setup-guides/nginx/#setting-up-reverse-proxy","title":"Setting up reverse Proxy","text":"<p>Create a new file under <code>/etc/nginx/sites-available/</code> and create a symbolic link in <code>sites-enabled</code> to enable it.</p> <pre><code>server {\n        listen &lt;port&gt;;\n        server_name &lt;server-name&gt;;\n        location / {\n                proxy_pass &lt;dest-addr&gt;:&lt;port&gt;;\n        }\n}\n</code></pre>","tags":["linux","network","utils","nginx"]},{"location":"KB/procedures/setup-guides/sambasetup/","title":"Setting up Samba","text":"","tags":["linux","network","networkshare","samba","utils"]},{"location":"KB/procedures/setup-guides/sambasetup/#install-samba","title":"Install samba","text":"<p>First install Samba package. From Terminal enter:</p> Debian <pre><code>sudo apt install samba\n</code></pre>","tags":["linux","network","networkshare","samba","utils"]},{"location":"KB/procedures/setup-guides/sambasetup/#configure-samba-file-server","title":"Configure Samba File Server","text":"<p>Append the samba configuration file located in <code>/etc/samba/smb.conf</code> with below lines.</p>","tags":["linux","network","networkshare","samba","utils"]},{"location":"KB/procedures/setup-guides/sambasetup/#restricted-share","title":"Restricted share","text":"","tags":["linux","network","networkshare","samba","utils"]},{"location":"KB/procedures/setup-guides/sambasetup/#what-is-restricted-share","title":"What is Restricted share","text":"<ul> <li>Share only for specific group</li> <li>Only accessible if correct username and password is provided</li> </ul> /etc/samba/smb.conf<pre><code>[SHARE-NAME]\n    comment = ANY-COMMENT\n    # allows only users from that group to access this path\n    valid users = @GROUPNAME\n    path = /PATH/TO/SHARE/DIR/\n    read only = no\n    browseable = yes\n</code></pre> <p>Make sure to update values to your server directory to be used.</p> Breakdown of values to be updated.. Value Description SHARE-NAME Share name that is visible to the Network. Use something that describes the share ANY-COMMENT Comments for better understanding. Can be anything @GROUPNAME Used to restrict the share to specific group in linux. /PATH/TO/SHARE/DIR/ Absolete Path to directory that should be shared","tags":["linux","network","networkshare","samba","utils"]},{"location":"KB/procedures/setup-guides/sambasetup/#guest-share","title":"Guest Share","text":"","tags":["linux","network","networkshare","samba","utils"]},{"location":"KB/procedures/setup-guides/sambasetup/#what-is-guest-share","title":"What is Guest Share","text":"<ul> <li>Anyone can access this share.</li> <li>This share will be visible without username or password.</li> <li>If the user enters wrong username and password this share will be visible.</li> </ul> /etc/samba/smb.conf<pre><code>[guest]\ncomment = Guest File Share\npath = /PATH/TO/SHARE/DIR/ # change the path to match your guest FS\nread only = no\nbrowseable = yes\nguest ok = yes\nguest only = yes\nwriteable = yes\n</code></pre>","tags":["linux","network","networkshare","samba","utils"]},{"location":"KB/procedures/setup-guides/sambasetup/#create-the-directory","title":"Create the directory","text":"<p>Samba is now configured, the directory needs to be created and the permissions changed.</p> <pre><code>sudo mkdir -p /PATH/TO/SHARE/DIR/\nsudo chown nobody:nogroup /PATH/TO/SHARE/DIR/\n</code></pre> <p>The -p switch tells mkdir to create the entire directory tree if it doesn\u2019t already exist.</p>","tags":["linux","network","networkshare","samba","utils"]},{"location":"KB/procedures/setup-guides/sambasetup/#enable-the-new-configuration","title":"Enable the new configuration","text":"<p>Restart the Samba services to enable the new configuration by running the following command:</p> Debian <pre><code>sudo systemctl restart smbd.service nmbd.service\n</code></pre> <p> </p>","tags":["linux","network","networkshare","samba","utils"]},{"location":"KB/procedures/setup-guides/sambasetup/#advanced-setup","title":"Advanced Setup","text":"<p>This will get you a basic samba setup to share files for more advanced setup refer</p> <ul> <li>Advanced Setup for smb.conf</li> <li>Ubuntu Documentation</li> </ul>","tags":["linux","network","networkshare","samba","utils"]},{"location":"KB/procedures/setup-guides/ssl-ca/","title":"Local SSL Certificate Authority","text":"<p>To use my own Root CA to manage certificates in the homelab environment.</p>","tags":["linux","network","utils","ssl","certificate"]},{"location":"KB/procedures/setup-guides/ssl-ca/#create-a-root-ca-certificate","title":"Create a Root CA Certificate","text":"<p>First you need to create the Root\u2019s private key,</p> <pre><code>openssl genrsa -des3 -out root.key 2048\n</code></pre> Example <pre><code>zeb:~/ssl_demo # openssl genrsa -des3 -out root.key 2048\nEnter PEM pass phrase:\nVerifying - Enter PEM pass phrase:\nzeb:~/ssl_demo # ll\ntotal 4\n-rw------- 1 root root 1854 Sep  8 20:34 root.key\nzeb:~/ssl_demo #\n</code></pre> <p>Now generate root CA</p> <pre><code>openssl req -newkey rsa:2048 -keyout root.key -nodes -x509 -days 3650 -out root.pem\n</code></pre> <p>Adjust <code>-days</code> to the need, this sets for next 10 years</p> Example <pre><code>zeb:~/ssl # openssl req -x509 -new -nodes -key root.key -sha256 -days 7200 -out root.pem\nEnter pass phrase for root.key:\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [AU]:IN\nState or Province Name (full name) [Some-State]:Karnataka\nLocality Name (eg, city) []:Gauribidanur\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:Homelab\nOrganizational Unit Name (eg, section) []:Server\nCommon Name (e.g. server FQDN or YOUR name) []:zeb.a.sh\nEmail Address []:tendec99@gmail.com\nzeb:~/ssl #\n</code></pre>","tags":["linux","network","utils","ssl","certificate"]},{"location":"KB/procedures/setup-guides/ssl-ca/#check-the-contents-of-your-authoritys-certificate-by-issuing","title":"Check the contents of your Authority\u2019s certificate by issuing,","text":"<pre><code>openssl x509 -text -noout -in  root.pem | head -15\n</code></pre> Example <pre><code>zeb:~/ssl # openssl x509 -text -noout -in  root.pem | head -15\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            58:d0:e2:59:3c:5a:01:55:4c:ce:c8:4f:53:40:43:bf:7e:21:35:4c\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = IN, ST = Karnataka, L = Gauribidanur, O = Homelab, OU = Server, CN = zeb.a.sh, emailAddress = tendec99@gmail.com\n        Validity\n            Not Before: Sep  8 14:00:19 2023 GMT\n            Not After : May 26 14:00:19 2043 GMT\n        Subject: C = IN, ST = Karnataka, L = Gauribidanur, O = Homelab, OU = Server, CN = zeb.a.sh, emailAddress = tendec99@gmail.com\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                Public-Key: (2048 bit)\n                Modulus:\n</code></pre> <p>Also to make sure that this is a CA you can also issue this command,</p> <pre><code>openssl x509 -text -noout -in root.crt | grep CA\n</code></pre> Example <pre><code>zeb:~/ssl # openssl x509 -text -noout -in root.pem | grep CA\n            CA:TRUE\n</code></pre> <p>This will be the main authority that issues certificates.</p>","tags":["linux","network","utils","ssl","certificate"]},{"location":"KB/procedures/setup-guides/ssl-ca/#import-the-certificate-to-your-browser","title":"Import the certificate to your browser","text":"<p>Navigate to Preferences -&gt; Certificates -&gt; View Certificates -&gt; Authorities Tab and Import you <code>.crt</code>/<code>.pem</code> file.</p> <p>Note</p> <p>For chrome navigate to Settings -&gt; Privacy -&gt; Manage Certificates and import the file to ** Trusted root authorities**</p>","tags":["linux","network","utils","ssl","certificate"]},{"location":"KB/procedures/setup-guides/ssl-ca/#create-self-signed-wildcard-certificate","title":"Create Self Signed Wildcard Certificate","text":"<p>Create our private key,</p> <pre><code>openssl genrsa -out wildcard-a-sh.key 2048\n</code></pre> <p>you can rename anything for the out file</p> Example <pre><code>zeb:~/ssl # openssl x509 -text -noout -in root.pem | grep CA:\nCA:TRUE\n</code></pre>","tags":["linux","network","utils","ssl","certificate"]},{"location":"KB/procedures/setup-guides/ssl-ca/#create-opensslsan-conf-file-for-certs","title":"Create opensslsan conf file for certs","text":"<p>Now we will create the certificate request by using the config file found below</p> <pre><code>vi opensslsan.cnf\n</code></pre> <pre><code>[req]\ndistinguished_name = req_distinguished_name\nreq_extensions = v3_req\nprompt = no\n[req_distinguished_name]\n#C = IN\n#ST = Karnataka\n#L = Gauribidanur\nO = Homelab\nOU = Home\nCN = *.a.sh\n[v3_req]\nkeyUsage = keyEncipherment, dataEncipherment\nextendedKeyUsage = serverAuth\nsubjectAltName = @alt_names\n[alt_names]\nDNS.1 = *.a.sh\n</code></pre> <p>You can modify CN and DNS fields according to your needs</p>","tags":["linux","network","utils","ssl","certificate"]},{"location":"KB/procedures/setup-guides/ssl-ca/#generate-csr-and-key-files","title":"Generate csr and key files","text":"<pre><code>openssl req -new -out wildcard-a-sh.csr \\\n-key wildcard-a-sh.key \\\n-config opensslsan.cnf\n</code></pre> <p>Now instead of sending the csr to a legitimate certificate authority so as to sign it with its private key, we will sign it with our own!</p> <pre><code>openssl x509 -req -in wildcard-a-sh.csr \\\n-CA root.pem \\\n-CAkey root.key \\\n-CAcreateserial \\\n-out wildcard-a-sh.crt \\\n-days 7200 \\\n-sha256 \\\n-extensions v3_req \\\n-extfile opensslsan.cnf\n</code></pre>","tags":["linux","network","utils","ssl","certificate"]},{"location":"KB/procedures/setup-guides/ssl-ca/#verify-that-the-certificate-is-correct-and-the-chain-is-trusted","title":"verify that the certificate is correct and the chain is trusted,","text":"<pre><code>openssl verify -CAfile root.pem wildcard-a-sh.crt\n</code></pre>","tags":["linux","network","utils","ssl","certificate"]},{"location":"KB/procedures/setup-guides/ssl-ca/#view-wildcard-certificate","title":"View Wildcard Certificate","text":"<pre><code>openssl x509 -text -noout -in  wildcard-a-sh.crt  | head -15\n</code></pre> <pre><code>openssl x509 -text -noout -in  wildcard-a-sh.crt | grep DNS\n</code></pre>","tags":["linux","network","utils","ssl","certificate"]},{"location":"KB/procedures/setup-guides/transmissionBTsetup/","title":"Transmission BitTorrent Setup","text":"","tags":["linux","network","transmission","utils"]},{"location":"KB/procedures/setup-guides/transmissionBTsetup/#installation","title":"Installation","text":"<p>Install transmission packages from terminal enter:</p> Debian <pre><code>sudo apt install transmission-cli transmission-common transmission-daemon\n</code></pre>","tags":["linux","network","transmission","utils"]},{"location":"KB/procedures/setup-guides/transmissionBTsetup/#configuration","title":"Configuration","text":"","tags":["linux","network","transmission","utils"]},{"location":"KB/procedures/setup-guides/transmissionBTsetup/#trasmission-stop","title":"Trasmission stop","text":"<p>Make sure the Transmission daemon is not running when changing the config file otherwise your changes will be over written.</p> <pre><code>sudo service transmission-daemon stop\n</code></pre> <p>edit <code>/var/lib/transmission-daemon/info/settings.json</code></p> <pre><code>sudo nano /var/lib/transmission-daemon/info/settings.json\n</code></pre>","tags":["linux","network","transmission","utils"]},{"location":"KB/procedures/setup-guides/transmissionBTsetup/#username-and-password","title":"Username and Password","text":"<p>The default rpc-username and password is <code>transmission</code></p> <p>Change if increased security is required.</p> <p>Change it to whatever you want (any password will work). After next restart the password will be rewritten in SHA1 encrypted format for security reasons.</p> /var/lib/transmission-daemon/info/settings.json<pre><code>\"rpc-password\": \"{62b16db87b89a91dd49a5110a7cafc06d20eb4f2wtK6kqPj\",\n\"rpc-username\": \"transmission\",\n</code></pre>","tags":["linux","network","transmission","utils"]},{"location":"KB/procedures/setup-guides/transmissionBTsetup/#whitelist","title":"Whitelist","text":"<p>This must be changed for remote access rpc-whitelist defines access to transmission. Localhost (<code>127.0.0.1</code>) is defined by default. I added ,<code>192.268.*.*</code> to allow any machine on my LAN access.</p> <pre><code>\"rpc-whitelist\": \"127.0.0.1,192.168.*.*\",\n</code></pre>","tags":["linux","network","transmission","utils"]},{"location":"KB/procedures/setup-guides/transmissionBTsetup/#umask-parameter","title":"umask parameter","text":"<p>You will also have to set the \"umask\" parameter in Transmission\u2019s settings file to \u201c2\u201d (default is 18) for the account user to have full access to files/folders created by Transmission.</p> <pre><code>\"umask\": 2,\n</code></pre>","tags":["linux","network","transmission","utils"]},{"location":"KB/procedures/setup-guides/transmissionBTsetup/#transmission-restart","title":"Transmission Restart","text":"<p>After configuration change, restart transmission</p> <pre><code>sudo service transmission-daemon start\n</code></pre>","tags":["linux","network","transmission","utils"]},{"location":"KB/procedures/setup-guides/transmissionBTsetup/#default-file-directory","title":"Default File Directory","text":"<p>Place a torrent file in this directory for automatic file download</p> <pre><code>/var/lib/transmission-daemon/downloads/\n</code></pre>","tags":["linux","network","transmission","utils"]},{"location":"KB/procedures/setup-guides/transmissionBTsetup/#configure-users-and-permissions","title":"Configure Users and Permissions","text":"<p>It is recommended that Transmission runs under it\u2019s own username for security reasons. This creates a few issues with file and folder access by Transmission as well as your account (let us assume it is user).</p> <p>Add the username user to the group debian-transmission:</p> <pre><code>sudo usermod -a -G debian-transmission user\n</code></pre> <p>Change \"user\" to you own Ubuntu user login name.</p> <p>Note</p> <p>When adding a user to a new group, the user must log out and log back in for it to take affect. A reboot will also accomplish this.</p>","tags":["linux","network","transmission","utils"]},{"location":"KB/procedures/setup-guides/transmissionBTsetup/#web-interface","title":"Web Interface","text":"<p>With your browser you can now add torrents, download and seed. You can also configure many transmission settings.</p> <pre><code>http://&lt;server-ip&gt;:9091\n</code></pre>","tags":["linux","network","transmission","utils"]},{"location":"KB/procedures/setup-guides/transmissionBTsetup/#command-line-interface","title":"Command Line Interface","text":"<p>With a headless server full control of Transmission requires CLI</p>","tags":["linux","network","transmission","utils"]},{"location":"KB/procedures/setup-guides/transmissionBTsetup/#transmission-create","title":"Transmission Create","text":"<p>Create a torrent file with transmission CLI. Torrent files can be generated from either a single file or directories. The example below is a directory example</p> <pre><code>transmission-create -o /var/lib/transmission-daemon/downloads/files.torrent -c \"My comments\" -t udp://tracker.openbittorrent.com:80 -t udp://open.demonii.com:1337 -t udp://tracker.coppersurfer.tk:6969 -t udp://tracker.leechers-paradise.org:6969 ~/torrent/complete/\n</code></pre> Breakdown of options used.. Option Description -o /var/lib/transmission-daemon/downloads/files.torrent New torrent name and where to store the torrent -c \"My comments\" Any comments to be attached to the file -t udp://tracker.openbittorrent.com:80 -t udp://open.demonii.com:1337 -t udp://tracker.coppersurfer.tk:6969 -t udp://tracker.leechers-paradise.org:6969 Trackers for the torrents, more than one tracker is recommended in case one or more goes down. ~/torrent/complete/ Directory to be made into a torrent. If a single file is required use this format <code>/var/lib/transmission-daemon/downloads/MyFile.txt</code> <p>For more information about \"transmission-create\" - <code>transmission-create -h</code></p>","tags":["linux","network","transmission","utils"]},{"location":"KB/procedures/setup-guides/transmissionBTsetup/#add-a-torrent","title":"Add a Torrent","text":"<p>To add a torrent to the daemon, use this command:</p> <pre><code>transmission-remote -a [path to file].torrent\n</code></pre> <pre><code>transmission-remote -n 'transmission:transmission' -a /var/lib/transmission-daemon/downloads/files.torrent\n</code></pre>","tags":["linux","network","transmission","utils"]},{"location":"KB/procedures/setup-guides/transmissionBTsetup/#torrent-information","title":"Torrent Information","text":"<p>Display information about torrent's being downloaded</p> Description Command Help information transmission-remote -h List all torrents transmission-remote -n 'username:password' -l Basic Stats All Torrents transmission-remote -n 'transmission:transmission' -st Full Stats All Torrents transmission-remote -n 'transmission:transmission' -si Torrent #3 Full Stats transmission-remote -n 'transmission:transmission' -t 3 -f Torrent #3 Summary Stats transmission-remote -n 'transmission:transmission' -t 3 -i <p>Note</p> <p>Authentication is required. Here transmission:transmission refers to <code>username:password</code> set to transmission</p>","tags":["linux","network","transmission","utils"]},{"location":"KB/procedures/setup-guides/transmissionBTsetup/#transmission-control","title":"Transmission Control","text":"Description Command Start all torrents transmission-remote -n 'transmission:transmission' -s Stop all torrents transmission-remote -n 'transmission:transmission' -S Start a specific torrent transmission-remote -s [hash] transmission-remote -n 'transmission:transmission' -s -t 3 Stop a specific torrent transmission-remote -S [hash] transmission-remote -n 'transmission:transmission' -S -t 3 Remove all torrents transmission-remote -n 'transmission:transmission' -r Remove a specific torrent transmission-remote -r [hash] transmission-remote -n 'transmission:transmission' -r -t 3 Get hashes for all torrents transmission-remote -n 'transmission:transmission' -i Quit the daemon transmission-remote -n 'transmission:transmission' -q","tags":["linux","network","transmission","utils"]},{"location":"projects/","title":"Projects Hub","text":"<p>This is my personal Projects Hub \u2014 a place to keep notes on experiments, Scripts and full-scale tools.</p> <ul> <li>Quick guides &amp; tutorials for each project.</li> <li>Notes &amp; logs for troubleshooting and lessons learned.</li> <li>Useful resources &amp; references I came across.</li> </ul>"}]}